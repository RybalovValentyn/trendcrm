{"version":3,"file":"static/js/883.af5a3513.chunk.js","mappings":"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","sources":["components/inputs/fileInput/fileInput.js","components/tableBody/pages/order/createHead/input.js","components/tableBody/pages/order/createHead/downloads.jsx","components/tableBody/pages/modals/modal.jsx","components/tableBody/pages/order/createHead/columnSettings.jsx","components/tableBody/pages/order/createHead/menuother.jsx","components/tableBody/pages/order/header.jsx"],"sourcesContent":["\r\nimport { Box, FormControl, Input , FormLabel, Typography  } from '@mui/material'\r\nimport { useState, useRef } from 'react'\r\n\r\n\r\nexport const InputFile = ({func})=>{\r\n\r\n  const [labelText, setLabelText] =useState('Вибаріть файл:');\r\n  const fileInput = useRef();\r\n\r\n  const handleChange =(e) =>{\r\n    e.preventDefault();\r\n  setLabelText(e.target.value?e.target.value:'Вибаріть файл:');\r\n \r\n  }\r\n\r\n    return (\r\n        <FormControl >\r\n          <Box sx={{ display: 'flex', width: '100%', alignItems: 'center',   }} >\r\n\r\n          <Typography sx={{display: 'block',  }}>{labelText}</Typography>\r\n          <FormLabel  sx={{border: '1px solid #c0c0c0',\r\n                     padding: '4px 10px', maxWidth: '200px' ,\r\n                      borderRadius: '4px', display: 'block',\r\n                       cursor: 'pointer', marginLeft: 'auto',\r\n                      minWidth: '180px' , fontSize: '13px', color: '#383838'\r\n                      \r\n                      }}  htmlFor=\"uploads\">{'Додати файл .xls'}</FormLabel>\r\n\r\n          <Input onChange={handleChange} ref={fileInput}  sx={{ width: '0', height: '0', opasity: 1}} type=\"file\" id=\"uploads\" name=\"uploads\" accept=\".xlsx\"/>\r\n \r\n          \r\n          </Box>\r\n      </FormControl>\r\n    )\r\n}","import {styled } from '@mui/material/styles';\r\nimport { InputBase, TextField } from '@mui/material';\r\nimport { colorsRef } from '../../../../../consts/colorConstants';\r\n\r\n\r\n\r\nexport const StyledextField = styled(TextField)({\r\n   '& label': {\r\n    color: '#777777 !important',\r\n    top:'-18px'\r\n  },\r\n  '& label.Mui-focused': {\r\n    display: 'none',\r\n    opasity: 0,\r\n\r\n  },\r\n\r\n    '& .MuiInputBase-input': {\r\n        borderRadius: '4px ',\r\n        position: 'relative',\r\n        fontSize: '12px',\r\n        padding: '0',         \r\n        color: colorsRef.inputHeadTextColor, \r\n     \r\n        },\r\n      '& .MuiOutlinedInput-root': {\r\n       \r\n        '& fieldset': {\r\n          color: colorsRef.inputHeadTextColor,\r\n          border: 'none !important',\r\n           \r\n        },\r\n       '&.Mui-focused fieldset': {\r\n        border: 'none !important',\r\n         \r\n      }},\r\n      '& .MuiInputBase-root': {\r\n         miWidth: '80px',\r\n         padding: '3px 0px 1px 8px',\r\n         minWidth: '80px',\r\n         marginLeft: '10px',\r\n         marginRight: '10px',\r\n        \r\n        },\r\n      '& div.MuiFormControl-root':{\r\n        position: 'relative',\r\n       \r\n       },\r\n    '& .MuiButtonBase-root':{\r\n        padding: '0px',\r\n        width: 0,\r\n        height: 0,\r\n        position: 'absolute',\r\n        zIndex: -2,\r\n        top: 0\r\n\r\n    },\r\n    // '& .MuiSvgIcon-root':{\r\n    //     width: 0,\r\n    //     height: 0,\r\n    //     position: 'absolute',\r\n    //     zIndex: -2,\r\n    //     top: 0\r\n    // },\r\n\r\n  });\r\n\r\n\r\n\r\n\r\nexport const StyledInput = styled(InputBase)(({ theme }) => ({\r\n  \"& .Mui-disabled\":{\r\n    backgroundColor: '#EEEEEE',\r\n    cursor: 'not-allowed'\r\n  },\r\n    '& .MuiInputBase-input': {\r\n      borderRadius: '4px',\r\n      position: 'relative',\r\n      fontSize: '12px',\r\n      border: `1px solid ${colorsRef.inputHeadBorderColor}`,\r\n      padding: '2px 12px ',\r\n      color: colorsRef.inputHeadTextColor, \r\n      width: '100%', \r\n      minWidth: '85px',\r\n\r\n    },\r\n\r\n\r\n  }));\r\n\r\n  export const selectStylesCheck = {\r\n    '& .MuiInputBase-input': {     \r\n      maxHeight: '23px',\r\n      lineHeight: 1.5,\r\n      border: `1px solid ${colorsRef.inputHeadBorderColor}`,\r\n    borderRadius: '4px',\r\n    color: colorsRef.inputTextColor,\r\n    position: 'relative',\r\n    backgrounColor: '#fff',\r\n    fontSize: '12px',\r\n    padding: '2px 32px 2px 12px',\r\n    minWidth: '65px',\r\n    maxWidth: '86px',  \r\n   \r\n  },\r\n\r\n  }\r\n\r\n  export const selectStyles = {\r\n    '& .MuiInputBase-input': {     \r\n      // maxHeight: '32px',\r\n      // height: '32px',\r\n    lineHeight: 1.5,\r\n    borderRadius: '4px',\r\n    color: colorsRef.inputTextColor,\r\n    position: 'relative',\r\n    backgrounColor: '#fff',\r\n    fontSize: '12px',\r\n    padding: '6px 32px 6px 12px',\r\n    minWidth: '135px',\r\n   \r\n  },\r\n  \r\n  }","import { Select, MenuItem, ListItemText, InputBase, InputAdornment } from '@mui/material';\r\nimport LocalMallOutlinedIcon from '@mui/icons-material/LocalMallOutlined';\r\nimport { useDispatch, useSelector,  } from 'react-redux';\r\nimport { useState, forwardRef } from 'react';\r\nimport { getOpenTableCreate, alertMessageUpdate } from '../../../../../redux/ordersReduser';\r\nimport { selectStyles, svgStyle, listStyle } from './style';\r\nimport { calculateNewValue } from '@testing-library/user-event/dist/utils';\r\nimport { setOrderReturn, getFilteredOrders, getAllOrders, setOrderPayment } from '../../../../../redux/asyncThunc';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 4;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n    maxHeight: ITEM_HEIGHT * 5 + ITEM_PADDING_TOP,\r\n    width: 180,\r\n    },\r\n  },\r\n};\r\n\r\n\r\n\r\nexport const DownloadComponent=()=>{\r\nconst dispatch = useDispatch();\r\nconst [open, setOpen] = useState(false);\r\nconst filteredRows = useSelector((state) => state.ordersAll.tHeadColumnFiltered);\r\nlet selected =  [];\r\nif (sessionStorage.getItem(\"selected\")) {\r\n    selected =  sessionStorage.getItem(\"selected\")?.split(',').filter(\r\n      (id, index, array) => array.indexOf(id) === index);\r\n}\r\n\r\nconst handleClickOpen = () => {\r\n  setOpen(!open);\r\n};\r\nconst successAlertAll = ({text, disp, func}) => {\r\n  // handleClickJustinItem()\r\n  withReactContent(Swal).fire({  \r\n      title: 'Увага!',  \r\n      text: text,\r\n      icon: 'warning',\r\n      confirmButtonColor: 'rgb(239, 83, 80)',\r\n      confirmButtonText: 'Так',\r\n      showCancelButton: true,\r\n      cancelButtonColor: '#3085d6',\r\n      cancelButtonText: 'Ні',\r\n    }).then((result) => {        \r\n      if (result.isConfirmed) {\r\n        if (disp) {\r\n          // requestPostTemplate(disp)\r\n          setTimeout(getUpdate, '100')\r\n        } else if (func) {\r\n          func()\r\n        Swal.fire(\r\n          'Переміщено!',\r\n          'Виділені замовлення успішно перенесені',\r\n          'success'\r\n        )\r\n        } \r\n      }\r\n    });     \r\n}\r\nconst handleClickExel = ()=>{    \r\n  dispatch(getOpenTableCreate({id: 'opendownload', str: true}));\r\n};\r\n\r\nconst handleChange = ()=>{    \r\nsetOpen(!open);\r\n};\r\nconst handleReturnProduct =(value)=>{\r\n  let length = selected.length\r\n  if (selected?.length === 0 && selected) {\r\n    return dispatch(alertMessageUpdate({message: 'idSelectedWarn', type: 'error'}))\r\n  }\r\n  if (length === 1 && selected[0] !== '') {\r\n    dispatch(setOrderReturn({id: selected[0], value}));  \r\n    } else if (length > 1) {\r\n    selected.map((id)=>{\r\n      if (id !== '') {\r\n        dispatch(setOrderReturn({id,value}))\r\n      }  \r\n    })    \r\n  }\r\n  setTimeout(getUpdate, '200') \r\n}\r\n\r\nconst handlePaymentReceived=(value)=>{\r\n  let length = selected.length\r\n  if (selected?.length === 0 && selected) {\r\n    return dispatch(alertMessageUpdate({message: 'idSelectedWarn', type: 'error'}))\r\n  }\r\n  if (length === 1 && selected[0] !== '') {\r\n    dispatch(setOrderPayment({id: selected[0], value}));  \r\n    } else if (length > 1) {\r\n    selected.map((id)=>{\r\n      if (id !== '') {\r\n        dispatch(setOrderPayment({id,value}))\r\n      }        \r\n    })    \r\n  }\r\n  setTimeout(getUpdate, '200') \r\n}\r\n\r\nconst handleCancelled =()=>{\r\n  if (selected?.length === 0 && selected) {\r\n    return dispatch(alertMessageUpdate({message: 'idSelectedWarn', type: 'error'}))\r\n  }\r\n  handleReturnProduct('0')\r\n  handlePaymentReceived('0')\r\n}\r\n\r\nconst getUpdate = ()=>{\r\n  if (filteredRows?.length > 0) {\r\n    dispatch(getFilteredOrders())\r\n  } else dispatch(getAllOrders())\r\n }\r\n\r\nreturn(\r\n    <Select \r\n    id=\"download_exel\"\r\n    value={''}\r\n    open={open}\r\n    onChange={handleChange}\r\n    input={<InputBase onClick={handleClickOpen} startAdornment={\r\n\r\n   <InputAdornment   position=\"start\">\r\n        <LocalMallOutlinedIcon sx={svgStyle}/>\r\n      </InputAdornment>\r\n    }  sx={selectStyles}/>}\r\n    MenuProps={MenuProps}\r\n  >   \r\n      {/* <MenuItem value={'exel'} sx={listStyle} >\r\n        <ListItemText onClick={handleClickExel} primary={'Завантажити Exel'} /> \r\n     \r\n      </MenuItem> */}\r\n      <MenuItem value={'back'} sx={listStyle} >\r\n        <ListItemText onClick={()=>handleReturnProduct('1')} primary={'Повернення товару'} />\r\n      </MenuItem>\r\n      <MenuItem value={'cost'} sx={listStyle} >\r\n        <ListItemText onClick ={()=>handlePaymentReceived('1')} primary={'Кошти отримано'} />\r\n      </MenuItem>\r\n      <MenuItem value={'cancel'} sx={listStyle} >\r\n        <ListItemText onClick ={handleCancelled} primary={'Відміна'} />\r\n      </MenuItem>\r\n\r\n  </Select>\r\n)\r\n}","import DialogContent from '@mui/material/DialogContent';\r\nimport { useDispatch, useSelector,  } from 'react-redux';\r\nimport { getOpenTableCreate } from '../../../../redux/ordersReduser';\r\nimport { InputFile } from '../../../inputs/fileInput/fileInput';\r\nimport { MenuItem, Select, Box, Typography, OutlinedInput } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { selectStyles } from '../order/createHead/input';\r\nimport { ModalComponent } from './modalComponent';\r\n\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 4;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n        overflowX: 'hidden',\r\n      },\r\n    },\r\n  };\r\n\r\n\r\nexport const ModalMenu = () =>{\r\n    const dispatch = useDispatch();\r\n    const openDownExel = useSelector((state) => state.ordersAll.modalControl.opendownload);\r\n    const [group, setGroup] = useState('Повернення товару')\r\n    const data=[{id:1, name:'Повернення товару' }, {id:2, name:'Кошти отримані'}]\r\n\r\n\r\nconst handleClouse =(e)=>{\r\n  dispatch(getOpenTableCreate({id: 'opendownload', str: false}));\r\n}\r\nconst handleSelectChange =(e)=>{\r\n  setGroup(e.target.value)\r\n}\r\n\r\nconst handleSendFile=()=>{\r\n\r\n}\r\nconst Component =()=>(\r\n  <DialogContent>\r\n        \r\n  <Box sx={{display: 'flex', justifyContent: 'space-between', width: '100%'}}>\r\n  <Typography>{'Дія:'}</Typography>\r\n\r\n  <Select \r\n    id=\"3\"\r\n     value={group}\r\n    onChange={handleSelectChange}\r\n    input={<OutlinedInput  sx={selectStyles}/>}\r\n    MenuProps={MenuProps}\r\n    >          \r\n  {data.map((name, ind)=>(\r\n  <MenuItem sx={{fontSize: '14px' }} id={name.id} key ={ind} value={name.name} >      \r\n  {name.name}\r\n</MenuItem>\r\n\r\n))}\r\n\r\n </Select>\r\n  </Box >\r\n  <InputFile/>\r\n  </DialogContent>\r\n)\r\n    return(\r\n\r\n      <ModalComponent Component={Component} funcOnClouse={handleClouse} open={openDownExel} closeButtonText={'Закрити'} sendButtonText={'Завантаити'} titleText={\"Завантажити Exel \"}\r\n      funcOnSend={handleSendFile} borderHeader={true} borderAction={false} alignAction={false}/>\r\n\r\n    )\r\n}","import { useDispatch, useSelector } from 'react-redux';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport { useState, forwardRef, useEffect } from 'react';\r\nimport { getOpenTableCreate, tHeadFilteredColumnUpdate } from '../../../../../redux/ordersReduser';\r\nimport {Checkbox, IconButton } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { getFilteredOrders, getAllOrders } from '../../../../../redux/asyncThunc';\r\nimport { colorsRef } from '../../../../../consts/colorConstants';\r\nimport { StyledButton } from '../../../../buttons/buttons';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport {translater} from '../translate';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { textFieldStyles } from './style';\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"down\" ref={ref} {...props} />;\r\n  });\r\n\r\n\r\nexport const ColumnSettings=()=>{\r\n    const dispatch = useDispatch();\r\n    const isOpenColumnSettings = useSelector((state) => state.ordersAll.modalControl.columnSettings);\r\n    const tHeadColumn = useSelector((state) => state.ordersAll.tHeadColumn)\r\n    const filteredColumn = useSelector((state) => state.ordersAll.tHeadColumnFiltered);\r\n    const [columnsCopy, setColumnsCopy] = useState([]);\r\n    const copyTranslster = Object.entries(translater).map((str, i)=>({id: str[0], str: str[1], num: i}));\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(() => {        \r\n        if (tHeadColumn.length > 0 && filteredColumn.length === 0) {            \r\n            let columnCopy = copyTranslster.map((col, i)=>({num:`${i}`, str: col.str, id: col.id, checked: false}))\r\n   \r\n            setColumnsCopy([...columnCopy])\r\n        } else if (tHeadColumn.length > 0 && filteredColumn.length > 0) {\r\n\r\n          let secondColumn = [];\r\n      let firstColumn = filteredColumn.map((col, i)=>{\r\n              let filt =  copyTranslster.find(n=>n.id === col.data)\r\n              if (filt) {\r\n              return {num: col.num, str: filt.str, id: filt.id, checked: true}\r\n              } \r\n              })\r\n       copyTranslster.map((col, i)=>{\r\n                let filtered = filteredColumn.find(n=>n.data === col.id)\r\n                if (!filtered) {\r\n                     secondColumn.push({num:`${i}`, str: col.str, id: col.id, checked: false}) \r\n                }})  \r\n  \r\n            setColumnsCopy([...firstColumn.concat(secondColumn)])  ;\r\n        }        \r\n        }, [isOpenColumnSettings]);\r\n        \r\n\r\n   const handleClose = () => {\r\n        let id = 'columnSettings';\r\n        let str = !isOpenColumnSettings;\r\n        dispatch(getOpenTableCreate({id, str}))\r\n\r\n    };\r\n\r\n\r\n    const handleToggle =(e) => {\r\n        let ind = e.target.id\r\n        let check = e.target.checked;\r\n        let str = columnsCopy.find(n=>n.id === e.target.name)        \r\n        let column = {num: str.num, str: str.str, id: str.id, checked: check } \r\n                columnsCopy.splice(ind,1,column);\r\n                setColumnsCopy([...columnsCopy]);  \r\n                };\r\n\r\n    const handleSelectChange =(e,ind)=>{\r\n      let currentColumn = e.target.id.split('-')[0];\r\n      let newColumn = e.target.id.split('-')[2];\r\n      let newSelectData = {};\r\n      if (!currentColumn || !newColumn ) {\r\n        return\r\n      }\r\n      if (search !== '') {\r\n        newColumn = columnsCopy.findIndex(n=>n.str === e.target.innerText)\r\n        newSelectData = columnsCopy.find(n=>n.str === e.target.innerText)\r\n      } else if (search === '') {\r\n        newSelectData = columnsCopy[newColumn];\r\n      }\r\n    let currentSelectColumn = columnsCopy[currentColumn];\r\n    let currentDataColumn = {num: currentColumn.num, str: currentSelectColumn.str, id: currentSelectColumn.id, checked: false}\r\n    let newDataColumn = {num: ind, str: newSelectData.str, id: newSelectData.id, checked: true }\r\n\r\n     columnsCopy.splice(ind,1,newDataColumn);\r\n     columnsCopy.splice(newColumn,1,currentDataColumn);\r\n      setColumnsCopy([...columnsCopy]);\r\n      setSearch('')\r\n    }\r\n\r\n const handleCloseApply =()=>{\r\n        let filter = columnsCopy.filter(n=>n.checked === true).map((col, i)=>({num:`${i}`,\r\n                     data: col.id, searchable: true, orderable: true, search:{value: ''}}));\r\n        sessionStorage.setItem(\"selected\", '');\r\n      dispatch(tHeadFilteredColumnUpdate(filter));\r\n      dispatch(getFilteredOrders());\r\n      handleClose();\r\n        }\r\n\r\nconst handleFResetFilters =()=>{\r\n    dispatch(tHeadFilteredColumnUpdate([]));\r\n    dispatch(getAllOrders())\r\n    handleClose();\r\n};\r\n\r\nconst listItemStyle ={\r\n  maxWidth: '455px',\r\n  minWidth: '200px',\r\n  alignItems: 'center'\r\n}\r\n\r\n\r\n    return(\r\n        <Dialog\r\n        open={isOpenColumnSettings}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n        sx={{overflow: 'hidden', '& .MuiPaper-root': {width: '500px', },}}\r\n      >\r\n        <DialogTitle sx={{display: 'flex',justifyContent: 'space-between'}}>{\"Відображення на сторінці замовлень\"}\r\n        <IconButton onClick={handleClose} aria-label=\"delete\">\r\n        <CloseIcon/>\r\n      </IconButton>\r\n        \r\n        </DialogTitle>\r\n         <DialogContent sx={{height: '600px', borderTop: '2px solid #d0d0d0', borderBottom:'2px solid #d0d0d0', '@media (max-width: 520px)': {\r\n          padding: 0\r\n           },}}>\r\n\r\n       <List >\r\n      {columnsCopy.map((name, ind)=>{\r\n              return(\r\n            <ListItem key={ind} sx={listItemStyle}>\r\n                <ListItemText sx={{ maxWidth: '30px', marginRight: '10px'}} primary={`№${ind+1}`}/>\r\n             <Checkbox\r\n                  edge=\"start\"\r\n                  onChange={handleToggle}\r\n                  name={name.id}\r\n                  sx={{'@media (max-width:320px)': {marginLeft: '5px',},}}\r\n                  id={`${ind}`}\r\n                  tabIndex={-1}\r\n                checked = {name.checked}\r\n                  disableRipple\r\n                /> \r\n            <Autocomplete\r\n            sx={{ '@media (max-width: 520px)': {\r\n              width: '100%',\r\n              maxWidth: '250px',\r\n\r\n            alignItems: 'center',\r\n            }}}\r\n                name={`${ind}`}\r\n                id={`${ind}`}                \r\n                options={columnsCopy}\r\n                onChange={(e)=>handleSelectChange(e,ind)}\r\n                getOptionDisabled={(option) =>\r\n                  option.checked === true\r\n                }\r\n                value={name}\r\n                // readOnly={ind === 0}\r\n                disableClearable\r\n                getOptionLabel={(option) => option.str}\r\n                renderInput={(params) => <TextField  onChange={(e)=>setSearch(e.target.value)} disabled={name.checked}\r\n                   sx={textFieldStyles} \r\n                    {...params}/>}\r\n              />\r\n\r\n            </ListItem>\r\n        )\r\n      })}\r\n      </List>\r\n        </DialogContent>\r\n\r\n        <DialogActions sx={{justifyContent: 'center', '@media (max-width: 520px)': {flexWrap: 'wrap' } }}>\r\n        <StyledButton\r\n          text={'Застосувати'}\r\n          func= {handleCloseApply}\r\n          border='#0c4b91'\r\n          bgColor={colorsRef.btnAddBgColor}\r\n            />\r\n          <StyledButton\r\n          text={'Відмінити'}\r\n          func= {handleClose}\r\n          border={colorsRef.buttonBorderInModal}\r\n          bgColor={colorsRef.btnAddBgColor}\r\n            />\r\n          <StyledButton\r\n          text={'Скинути фільтри'}\r\n          func= {handleFResetFilters}\r\n          border={colorsRef.buttonBorderInModal}\r\n          bgColor={colorsRef.btnAddBgColor}\r\n            />\r\n        </DialogActions>\r\n      </Dialog>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import { Select, MenuItem, ListItemText, InputBase, InputAdornment, Popper, Paper, MenuList} from '@mui/material';\r\nimport { useDispatch, useSelector,  } from 'react-redux';\r\nimport { useState, forwardRef, useRef } from 'react';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport { selectStyles, svgStyle, listStyle } from './style';\r\nimport KeyboardArrowRightOutlinedIcon from '@mui/icons-material/KeyboardArrowRightOutlined';\r\nimport { getOpenTableCreate, alertMessageUpdate, autoUpdate } from '../../../../../redux/ordersReduser';\r\nimport { useNavigate} from 'react-router-dom';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport * as fileSaver from 'file-saver';\r\nimport *as XLSX from 'sheetjs-style';\r\nimport { getRowsAfterAdd, getPrintTtn, getNewPostTtnDelete, getNewPostTtnReturn, RemoveOrderFromId,\r\n         getFilteredOrders, getAllOrders} from '../../../../../redux/asyncThunc';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 4;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {    \r\n    maxHeight: ITEM_HEIGHT * 8 + ITEM_PADDING_TOP,\r\n    width: 200,\r\n    boxShadow: 'none',\r\n    border: '1px solid #d0d0d0',\r\n   },\r\n  },\r\n};\r\n\r\n\r\n\r\nexport const OtherMenuComponent=()=>{\r\n\r\n  const columns = useSelector((state) => state.ordersAll.columns);\r\n  const dataForHeader = useSelector((state) => state.ordersAll.tHeadColumn);\r\nconst navigate = useNavigate();\r\nconst dispatch = useDispatch();\r\nconst [open, setOpen] = useState(false);\r\nconst [openJustin, setOpenjustin] = useState(false);\r\nconst justinRef = useRef(null);\r\nconst [openNp, setOpenNp] = useState(false);\r\nconst newPostRef = useRef(null);\r\nconst [openPrint, setOpenPrint]= useState(false);\r\nconst printRef = useRef(null);\r\nconst fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\nconst fileExtension = '.xlsx';\r\nlet selected =  [];\r\nif (sessionStorage.getItem(\"selected\")) {\r\n    selected =  sessionStorage.getItem(\"selected\")?.split(',').filter(\r\n      (id, index, array) => array.indexOf(id) === index);\r\n}\r\nconst filteredRows = useSelector((state) => state.ordersAll.tHeadColumnFiltered);\r\n\r\n\r\nconst successAlertAll = ({text, disp, func}) => {\r\n  handleClickJustinItem()\r\n  withReactContent(Swal).fire({  \r\n      title: 'Увага!',  \r\n      text: text,\r\n      icon: 'warning',\r\n      confirmButtonColor: 'rgb(239, 83, 80)',\r\n      confirmButtonText: 'Так',\r\n      showCancelButton: true,\r\n      cancelButtonColor: '#3085d6',\r\n      cancelButtonText: 'Ні',\r\n    }).then((result) => {        \r\n      if (result.isConfirmed) {\r\n        if (disp) {\r\n          requestPostTemplate(disp)\r\n          setTimeout(getUpdate, '100')\r\n        } else if (func) {\r\n          func()\r\n        Swal.fire(\r\n          'Експортовано!',\r\n          'Виділені замовлення успішно експортовані',\r\n          'success'\r\n        )\r\n        } \r\n    \r\n        // Swal.fire(\r\n        //   'Створено!',\r\n        //   'ЕН Justin успішно створена',\r\n        //   'success'\r\n        // )\r\n      }\r\n    });     \r\n}\r\nconst getUpdate = ()=>{\r\n  if (filteredRows?.length > 0) {\r\n    dispatch(getFilteredOrders())\r\n  } else dispatch(getAllOrders())\r\n}\r\n\r\nconst handleClickOpen = () => {\r\nif (!open) {\r\n  setOpen(true);\r\n} \r\n};\r\nconst handleHover =()=>{\r\n  setOpenjustin(false);\r\n  setOpenNp(false)\r\n  setOpenPrint(false)\r\n}\r\n\r\nconst handleClicSms = ()=>{    \r\n  setOpen(false);\r\n  dispatch(getOpenTableCreate({id: 'send_sms', str: true}));\r\n \r\n};\r\n\r\nconst handleMouseEnter=(e)=>{\r\n  if (open) {\r\n    setOpenNp(false)\r\n    setOpenjustin(true)\r\n    setOpenPrint(false)\r\n  }\r\n\r\n}\r\n\r\nconst handleClickJustinItem=()=>{\r\n  setOpen(false);\r\n  setOpenjustin(false);\r\n  setOpenNp(false)\r\n  setOpenPrint(false)\r\n}\r\nconst handleClickJustinItemCreate=()=>{\r\n  handleClickJustinItem();\r\n  dispatch(getOpenTableCreate({id: 'justin_create', str: true}));\r\n}\r\nconst handleMouseEnterNewPost=()=>{\r\n  if (open) {   \r\n    setOpenjustin(false)\r\n    setOpenNp(true)\r\n    setOpenPrint(false)\r\n  }\r\n}\r\n\r\nconst handlePrintTTN=(type)=>{\r\n handleClickJustinItem()\r\n if (selected.length > 0 && selected) {\r\n  dispatch(getPrintTtn({orders: selected, type: type}))\r\n  return\r\n} else dispatch(alertMessageUpdate({message: 'idSelectedWarn', type: 'error'}))\r\n \r\n}\r\n\r\nconst handlePrepayStatus=()=>{\r\n  handleClickJustinItem()\r\n  dispatch(getOpenTableCreate({id: 'prepay_update', str: true}));  \r\n\r\n}\r\nconst handleUpdateOrders=()=>{\r\n  handleClickJustinItem()\r\n  if (selected?.length === 0 || !selected) {\r\n    return dispatch(alertMessageUpdate({message: 'idSelectedWarn', type: 'error'}))\r\n  }\r\n  if (selected?.length === 1 && selected[0]) {\r\n    let id = selected[0]\r\n    dispatch(autoUpdate({id: 'isUpdateRows', str: true}));\r\n    dispatch(getRowsAfterAdd(id));  \r\n    navigate(`/trendcrm/order/${id}`); \r\n    return  \r\n  }\r\n  if (selected?.length > 1) {\r\n    dispatch(alertMessageUpdate({message: 'idSelectedOne', type: 'warn'}))\r\n    dispatch(autoUpdate({id: 'isUpdateRows', str: true}));\r\n    let id = selected[0]\r\n    dispatch(getRowsAfterAdd(id));  \r\n    navigate(`/trendcrm/order/${id}`);   \r\n    return\r\n  } else dispatch(alertMessageUpdate({message: 'idSelectedWarn', type: 'error'}))\r\n}\r\n\r\nconst handleStatusUpdate=()=>{  \r\n  handleClickJustinItem()\r\n  dispatch(getOpenTableCreate({id: 'status_update', str: true})); \r\n}\r\n\r\nconst handleDateSendUpdate =()=>{\r\n  handleClickJustinItem()\r\n  dispatch(getOpenTableCreate({id: 'date_send_update', str: true}));  \r\n}\r\n\r\nconst isFirstElement = (row)=>{\r\n  if (row.length === 2 &&row[1] === '1' && !row[2]) {\r\n    return true\r\n  } else if (row.length === 3&&row[2] === '1' && !Number(row[1]) ) {\r\n    return true\r\n  } else return false\r\n}\r\n\r\nconst handleExportExcel=()=>{\r\n  let column = [];\r\n  if (selected[0]) {\r\n column = selected.map((id, ind)=>{ \r\nif (Number(id)) {\r\n  let col = columns.find(n=>n.id === id)\r\n  let dataForFile = dataForHeader.map(str=>{\r\n    return[ str.str, col[str.id]]\r\n      })\r\n   return Object.fromEntries(dataForFile)\r\n}\r\n })\r\n  }\r\n      const ws = XLSX.utils.json_to_sheet(column);\r\n      let width = []\r\n      for (const key in ws) {       \r\n        if (isFirstElement(key.split(''))) {\r\n          ws[key].s = {font: {name: '*', sz: 12, bold: true, color: { rgb: \"333\" }},\r\n          border: {top:{style:'medium'},bottom:{style:'medium'},left:{style:'medium'},right:{style:'medium'}},\r\n          alignment:{wrapText:false}         \r\n        }  \r\n        const max_width = ws[key].v?.length+6 \r\n       width.push({ wch: max_width })\r\n        }        \r\n      }\r\n      ws[\"!cols\"] = width;\r\n      const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n      const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n      const data = new Blob([excelBuffer], {type: fileType});\r\n      fileSaver.saveAs(data, 'export' + fileExtension);\r\n\r\n}\r\n\r\nconst exportExcel = ()=>{\r\n  const text = 'Ви дійсно хочете експортувати в Exсel?';\r\n  if (selected.length === 0 || !selected) {\r\n    return dispatch(alertMessageUpdate({message: 'idSelectedWarn', type: 'warn'}))\r\n  } else successAlertAll({text: text, func: handleExportExcel });\r\n}\r\n\r\nconst handleImportExcel=()=>{\r\n  handleClickJustinItem()\r\n  dispatch(getOpenTableCreate({id: 'open_modal_component', str: true})); \r\n}\r\nconst handleClickCreateTtnNewPost=()=>{\r\n  handleClickJustinItem()\r\n  dispatch(getOpenTableCreate({id: 'ttnNewPostCreate', str: true}));\r\n}\r\nconst removeTtnNewPost = ()=>{\r\n  const text = `Ви дісно хочете видалити ${selected.length} TTH`;\r\n  successAlertAll({text: text, disp: getNewPostTtnDelete });\r\n \r\n}\r\n\r\nconst requestPostTemplate = (disp)=>{\r\n  if (selected && selected?.length === 1) {\r\n    dispatch(disp(selected[0]))\r\n  }else if (selected && selected?.length > 1) {\r\n    selected.map(s=>{\r\n      if (Number(s)) {\r\n        dispatch(disp(s))\r\n      }\r\n    })\r\n  } else dispatch(alertMessageUpdate({message: 'idSelectedWarn', type: 'error'}))\r\n}\r\n\r\nconst returnTtnNewPost = ()=>{\r\n  const text = `Ви дісно хочете зробити повернення ${selected.length} TTH`;\r\n  successAlertAll({text: text, disp: getNewPostTtnReturn });\r\n\r\n}\r\n\r\nconst removeOrder = ()=>{\r\n  const text = `Ви дісно хочете видалити замовлення?`;\r\n  successAlertAll({text: text, disp: RemoveOrderFromId });\r\n}\r\n\r\nreturn(\r\n\r\n    <Select \r\n    id=\"other_menu\"\r\n    value={''}\r\n    open={open}\r\n    onClose={()=>openJustin || openNp ?null:setOpen(false)}\r\n    input={<InputBase onClick={handleClickOpen} startAdornment={\r\n   <InputAdornment   position=\"start\">\r\n       <SettingsIcon  sx={svgStyle}/>\r\n      </InputAdornment>\r\n    }  sx={selectStyles}/>}\r\n    MenuProps={MenuProps}\r\n  >   \r\n      <MenuItem value={'sms'} sx={listStyle} onMouseEnter={handleHover}>\r\n        <ListItemText onClick={handleClicSms}  primary={'Відправити SMS'} />      \r\n      </MenuItem>\r\n\r\n      <MenuItem ref={justinRef} onMouseEnter={handleMouseEnter} value={'ukr_poshta'} sx={listStyle} id={'УкрПошта'} key={'УкрПошта'} >\r\n        <ListItemText  primary={'УкрПошта'} />\r\n        <KeyboardArrowRightOutlinedIcon fontSize='small' sx={{color: '#a0a0a0'}} />\r\n        {open? <Popper\r\n          open={openJustin}\r\n          anchorEl={justinRef.current}\r\n          role={undefined}\r\n          placement=\"left-start\"\r\n          sx={{zIndex: 1301}}\r\n          onMouseLeave={()=>setOpenjustin(false)}\r\n        >   \r\n\r\n              <Paper id={'justin_paper'}>\r\n                  <MenuList\r\n                    id=\"justin_menu\"\r\n                    aria-labelledby=\"composition-button\"\r\n                    // onKeyDown={handleListKeyDown}\r\n                    \r\n                  >\r\n                    <MenuItem sx={{fontSize: '14px'}} onClick={handleClickJustinItemCreate}>Створити ЕН</MenuItem>\r\n                    <MenuItem sx={{fontSize: '14px'}} onClick={handleClickJustinItem}>Роздрукувати ЕН</MenuItem>\r\n                    <MenuItem sx={{fontSize: '14px'}} onClick={handleClickJustinItem}>Видалити ЕН</MenuItem>\r\n                    <MenuItem sx={{fontSize: '14px'}} onClick={handleClickJustinItem}>Повернення ЕН</MenuItem>\r\n                  </MenuList>\r\n             \r\n              </Paper>\r\n           </Popper>:null}\r\n      </MenuItem>\r\n      <MenuItem ref={newPostRef} value={'newPost'} onMouseEnter={handleMouseEnterNewPost}  sx={listStyle}>\r\n        <ListItemText   primary={'Нова Пошта'} />\r\n        <KeyboardArrowRightOutlinedIcon fontSize='small' sx={{color: '#a0a0a0'}} />\r\n        { open? <Popper\r\n          open={openNp}\r\n          anchorEl={newPostRef.current}\r\n          role={undefined}\r\n          placement=\"left-start\"\r\n          sx={{zIndex: 1301}}\r\n          onMouseLeave={()=>setOpenNp(false)}\r\n        >  \r\n              <Paper id={'newpost_paper'}>\r\n                  <MenuList\r\n                    id=\"newpost_menu\"\r\n                    aria-labelledby=\"composition-button\"\r\n                                       \r\n                  >\r\n                    <MenuItem sx={{fontSize: '14px'}} onClick={handleClickCreateTtnNewPost} onMouseEnter={()=>setOpenPrint(false)}>Створити ТТН</MenuItem>\r\n                    <MenuItem   ref={printRef}  sx={{fontSize: '14px', alignItems: 'center'}} onClick={handleClickJustinItem} onMouseEnter={()=>setOpenPrint(true)}>Роздрукувати ТТН\r\n                    <KeyboardArrowRightOutlinedIcon fontSize='small' sx={{color: '#a0a0a0', marginLeft: '15px'}} />\r\n                    { open? <Popper\r\n                          open={openPrint}\r\n                          anchorEl={printRef.current}\r\n                          role={undefined}\r\n                          placement=\"left-start\"\r\n                          sx={{zIndex: 1301}}\r\n                          onMouseLeave={()=>setOpenPrint(false)}\r\n                        >   \r\n\r\n                          <Paper id={'print_paper'}>\r\n                              <MenuList\r\n                                id=\"print_menu\"\r\n                                aria-labelledby=\"composition-button\"                                    \r\n                           >\r\n                                      <MenuItem sx={{fontSize: '14px'}} onClick={()=>handlePrintTTN(\"ttn_pdf\")}>pdf</MenuItem>\r\n                                      <MenuItem sx={{fontSize: '14px'}} onClick={()=>handlePrintTTN(\"ttn_pdf_zebra\")}>pdf (зебра)</MenuItem>\r\n                                    </MenuList>\r\n                              \r\n                                </Paper>\r\n                            </Popper>:null}\r\n                    </MenuItem>\r\n                    <MenuItem sx={{fontSize: '14px'}} onClick={removeTtnNewPost} onMouseEnter={()=>setOpenPrint(false)}>Видалити ТТН</MenuItem>\r\n                    <MenuItem sx={{fontSize: '14px'}} onClick={returnTtnNewPost}>Повернення ТТН</MenuItem>\r\n                  </MenuList>\r\n             \r\n              </Paper>\r\n           </Popper>:null}\r\n      </MenuItem>\r\n      <MenuItem onMouseEnter={handleHover} onClick={handleUpdateOrders} value={'fixed'} sx={listStyle}  >\r\n        <ListItemText  primary={'Редагувати'} />\r\n      </MenuItem>\r\n      <MenuItem value={'prepay'} onClick={handlePrepayStatus} onMouseEnter={handleHover} sx={listStyle}>\r\n        <ListItemText  primary={'Передплата'} />\r\n      </MenuItem>\r\n       <MenuItem value={'chnge_ststus'} onClick = {handleStatusUpdate} onMouseEnter={handleHover} sx={listStyle} >\r\n        <ListItemText  primary={'Змінити статуси'} />\r\n      </MenuItem>\r\n      <MenuItem value={'schange_date'} onClick={handleDateSendUpdate} onMouseEnter={handleHover} sx={listStyle} >\r\n        <ListItemText  primary={'Змінити дату відправлення'} />\r\n      </MenuItem>\r\n      <MenuItem value={'export_exel'} onClick={exportExcel} onMouseEnter={handleHover} sx={listStyle}>\r\n        <ListItemText  primary={'Експотр Exel'} />\r\n      </MenuItem>\r\n      <MenuItem value={'import_exel'} onClick={handleImportExcel}  sx={listStyle} onMouseEnter={handleHover} >\r\n        <ListItemText  primary={'Імпорт Exel'} />\r\n      </MenuItem>\r\n      <MenuItem value={'delete'} sx={listStyle} onClick={removeOrder} onMouseEnter={handleHover}>\r\n        <ListItemText  primary={'Видалити'} />\r\n      </MenuItem>\r\n\r\n  </Select>\r\n\r\n)\r\n}","import Box from '@mui/material/Box';\r\nimport {clasListContainer, svgStyle, buttonBoxStyle, BootstrapTooltip, listStyle} from './styles';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport BuildOutlinedIcon from '@mui/icons-material/BuildOutlined';\r\nimport ReplayOutlinedIcon from '@mui/icons-material/ReplayOutlined';\r\nimport {BpCheckbox} from '../../../inputs/checkBox'\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getOpenTableCreate, getClouseTableCreate} from '../../../../redux/ordersReduser';\r\nimport {StyledButton} from '../../../buttons/buttons';\r\nimport { colorsRef } from '../../../../consts/colorConstants';\r\nimport { useEffect, useState } from 'react';\r\nimport {  CountUpdate, autoUpdate} from '../../../../redux/ordersReduser';\r\nimport { getAllOrders, getAllStatuses, getFilteredOrders } from '../../../../redux/asyncThunc';\r\nimport { DownloadComponent } from './createHead/downloads'; \r\nimport { ModalMenu } from '../modals/modal'\r\nimport { ColumnSettings } from './createHead/columnSettings';\r\nimport {OtherMenuComponent} from './createHead/menuother';\r\nimport { CustomizedCheckboxAll } from '../../../inputs/checkBox';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport { getselected } from '../../../../redux/funcReduser';\r\n\r\n\r\nfunction HeaderContainer() {\r\nconst dispatch = useDispatch();\r\nconst navigate = useNavigate();\r\nconst bodyTableRows = useSelector((state) => state.ordersAll.bodyTableRows);\r\nconst paramsCount = useSelector((state) => state.ordersAll.searchParamCount);\r\nconst columns = useSelector((state) => state.ordersAll.tHeadColumn);\r\nconst [number, setNumber] = useState('');\r\nconst autoUdatesTime = useSelector((state) => state.ordersAll.autoupdate);\r\nconst isAutoUdate = useSelector((state) => state.ordersAll.isAutoUpdate);\r\nconst isGrabAll = useSelector((state) => state.ordersAll.isGrabAll);\r\nconst filteredRows = useSelector((state) => state.ordersAll.tHeadColumnFiltered);\r\nconst isAllListProducts =  useSelector((state) => state.ordersAll.isAllListProducts);\r\nlet [timer, setTimer] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n\r\nif (isAutoUdate && Number(autoUdatesTime) > 29) {\r\n  console.log('start timer');\r\nlet time = Number(autoUdatesTime)*1000\r\nsetTimer(setInterval(() => {\r\n  handleReload()\r\n\r\n}, time))  \r\n} else if (!isAutoUdate) {\r\n  stopTimer()\r\n} \r\n}, [isAutoUdate, autoUdatesTime]);\r\n\r\nuseEffect(() => {\r\n  stopTimer()\r\n  if (filteredRows.length > 0 && isAutoUdate && Number(autoUdatesTime) > 29) {\r\n    let time = Number(autoUdatesTime)*1000\r\n    setTimer(setInterval(() => {\r\n      handleReload()\r\n    \r\n    }, time)) \r\n  } else if (filteredRows.length === 0 && isAutoUdate && Number(autoUdatesTime) > 29) {\r\n    let time = Number(autoUdatesTime)*1000\r\n    setTimer(setInterval(() => {\r\n      handleReload()    \r\n    }, time))}\r\n  }, [filteredRows]);\r\n\r\nconst stopTimer = ()=>{\r\n  clearInterval(timer);\r\n  setTimer(null)\r\n}\r\n\r\nconst handleClick = ()=>{\r\n  dispatch(getClouseTableCreate())\r\n  navigate('/trendcrm/order')\r\n  \r\n}\r\n\r\n\r\nconst handleResetFilters=()=>{\r\ndispatch(CountUpdate())\r\nif (filteredRows?.length > 0) {\r\n  dispatch(getFilteredOrders())\r\n} else dispatch(getAllOrders())\r\n// navigate('/trendcrm/orders')\r\n}\r\n\r\n\r\nconst onHandleCheck=(e)=>{\r\n  console.log('autoonHandleCheck');\r\n  let check = e.target.checked\r\n  if (number === '' && check) {\r\n    // console.log(check);\r\n    setNumber(30)\r\n    dispatch(autoUpdate({id: 'autoupdate', str: 30}))\r\n    dispatch(autoUpdate({id: 'isAutoUpdate', str: check}));\r\n  } else if (!check) {\r\n    setNumber('');\r\n    dispatch(autoUpdate({id: 'isAutoUpdate', str: check}));\r\n    dispatch(autoUpdate({id: 'autoupdate', str: 0}))\r\n    stopTimer()\r\n  } \r\n  \r\n}\r\nconst handleReload =()=>{\r\n  dispatch(getAllStatuses())\r\n  if (filteredRows?.length > 0) {\r\n    dispatch(getFilteredOrders())\r\n  } else dispatch(getAllOrders())\r\n}\r\nconst handleColumnSettings=()=>{\r\n  let id = 'columnSettings';\r\n  let str = true;\r\n  dispatch(getOpenTableCreate({id, str}))\r\n}\r\n\r\nconst numberChange = (e)=>{\r\n  if (Number(e.target.value)) {\r\n    setNumber(e.target.value)\r\n  }\r\n}\r\nconst handleKeyDown=(e)=>{\r\n  if (e.key === 'Backspace') {\r\n    stopTimer()\r\n    setNumber('')\r\n  } else if (e.key === \"Enter\" && e.target.value >= 30) {\r\n    stopTimer()\r\n    dispatch(autoUpdate({id: 'autoupdate', str: number}))\r\n  }else if (e.key === \"Enter\" && e.target.value < 30) {\r\n    stopTimer()\r\n    setNumber(30)\r\n    dispatch(autoUpdate({id: 'autoupdate', str: 30}))\r\n  };\r\n}\r\n\r\nconst onchangeAll=(e)=>{\r\n  let s = e.target.checked;\r\n  dispatch(autoUpdate({id: 'isGrabAll', str: s}))\r\n  if (s) {\r\n    const newSelected = bodyTableRows.map((n,ind) => n[0].value);\r\n    sessionStorage.setItem(\"selected\", newSelected);\r\n    dispatch(getselected(newSelected))\r\n    return;\r\n  } else return\r\n   \r\n  \r\n}\r\n\r\n\r\nconst onHandleCheckProduct=(e)=>{\r\n  let check = e.target.checked\r\n  dispatch(autoUpdate({id: 'isAllListProducts', str: check}))\r\n\r\n}\r\n  return (\r\n    <Box sx={clasListContainer}  component=\"section\">\r\n<Box sx={buttonBoxStyle}>\r\n      <StyledButton\r\n        text={'Створити'}\r\n        func= {handleClick}\r\n        startIcon = { <AddIcon sx={{fill: colorsRef.fillSvgColor, width: '17px', marginTop: '-2px'}} />}\r\n        bgColor={colorsRef.btnAddBgColor}\r\n        border= {colorsRef.btnAddBorderColor}\r\n           />\r\n      \r\n\r\n      {paramsCount>0 && <Box sx={{marginLeft: '20px', marginRight: 'auto'}}>      \r\n      <StyledButton            \r\n        text={`Скинути фільтри: ${paramsCount}`}\r\n        func= {handleResetFilters}\r\n        bgColor={colorsRef.btnAddBgColor}\r\n        border= {'#7bb31a'}        \r\n           />\r\n           </Box>}\r\n  </Box>\r\n  <Box sx={{'@media (max-width:768px)': {width: '100%', textAlign: 'center' },}}>\r\n    <List  sx={listStyle}>\r\n\r\n    <ListItem sx={{paddingLeft: '0px', paddingRight: '10px'}}>\r\n        <BpCheckbox name='product_list' onChange={onHandleCheckProduct} tooltip ={'Повний список товарів'} \r\n        placement=\"left\"  checked={isAllListProducts}/>    \r\n        </ListItem>\r\n\r\n      <ListItem sx={{paddingLeft: '10px', paddingRight: '10px', \"& :hover\": {cursor: 'pointer', }}}>\r\n        <CustomizedCheckboxAll name='product_list' onChange={onchangeAll} tooltip ={'Вибрати все'} checked={isGrabAll} />\r\n      </ListItem>\r\n       \r\n        <ListItem sx={{paddingLeft: '10px', paddingRight: '20px', \"& :hover\": {cursor: 'pointer', }}}>\r\n        <BootstrapTooltip title=\"Налаштувати колонки\">\r\n          <BuildOutlinedIcon onClick = {handleColumnSettings} sx={svgStyle}/>          \r\n          </BootstrapTooltip>\r\n          {columns.length > 0 && <ColumnSettings/>}\r\n        </ListItem>\r\n       \r\n        <ListItem sx={{padding: '0px 0px 0px 10px', \"& :hover\": {cursor: 'pointer',}}}>      \r\n        <DownloadComponent/>  \r\n        <ModalMenu/>\r\n        </ListItem>\r\n        \r\n        <ListItem sx={{padding: '0px 0px 0px 0px', \"& :hover\": {cursor: 'pointer', }}}> \r\n        <OtherMenuComponent/>        \r\n        \r\n        </ListItem>\r\n\r\n        <ListItem sx={{paddingLeft: '5px', paddingRight: '10px', \"& :hover\": {cursor: 'pointer', }}}>\r\n           <BootstrapTooltip title=\"Оновити сторінку\">\r\n        <ReplayOutlinedIcon onClick={handleReload} sx={svgStyle} />\r\n           </BootstrapTooltip>\r\n        </ListItem>        \r\n\r\n        <ListItem>\r\n        <BootstrapTooltip title=\"Частота автооновлення\">\r\n        <input value ={autoUdatesTime?autoUdatesTime:number}  onKeyDown={handleKeyDown} style={{width: '50px', padding: '4px 5px', border: '1px solid #d0d0d0', borderRadius: '4px'}} type='text'  onChange={numberChange}\r\n         ></input>\r\n        </BootstrapTooltip>\r\n        </ListItem>\r\n\r\n        <ListItem sx={{paddingLeft: '10px', paddingRight: '10px'}}>\r\n        <BpCheckbox onChange={onHandleCheck} name='auto_reloading' tooltip ={'Увімкнути автооновлення'} checked={isAutoUdate}/>\r\n        </ListItem>\r\n\r\n\r\n    </List>\r\n    </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HeaderContainer"],"names":["InputFile","func","useState","labelText","setLabelText","fileInput","useRef","sx","display","width","alignItems","border","padding","maxWidth","borderRadius","cursor","marginLeft","minWidth","fontSize","color","htmlFor","onChange","e","preventDefault","target","value","ref","height","opasity","type","id","name","accept","StyledInput","styled","TextField","top","position","colorsRef","miWidth","marginRight","zIndex","InputBase","theme","backgroundColor","selectStylesCheck","maxHeight","lineHeight","backgrounColor","selectStyles","MenuProps","PaperProps","style","ITEM_HEIGHT","DownloadComponent","dispatch","useDispatch","open","setOpen","filteredRows","useSelector","state","ordersAll","tHeadColumnFiltered","selected","sessionStorage","getItem","split","filter","index","array","indexOf","handleReturnProduct","length","alertMessageUpdate","message","setOrderReturn","map","setTimeout","getUpdate","handlePaymentReceived","setOrderPayment","getFilteredOrders","getAllOrders","Select","input","onClick","startAdornment","InputAdornment","LocalMallOutlined","svgStyle","MenuItem","listStyle","ListItemText","primary","overflowX","ModalMenu","openDownExel","modalControl","opendownload","group","setGroup","data","handleSelectChange","Component","DialogContent","Box","justifyContent","Typography","OutlinedInput","ind","funcOnClouse","getOpenTableCreate","str","closeButtonText","sendButtonText","titleText","funcOnSend","borderHeader","borderAction","alignAction","Transition","forwardRef","props","Slide","direction","ColumnSettings","isOpenColumnSettings","columnSettings","tHeadColumn","filteredColumn","columnsCopy","setColumnsCopy","copyTranslster","Object","entries","translater","i","num","search","setSearch","useEffect","columnCopy","col","checked","secondColumn","firstColumn","filt","find","n","push","concat","handleClose","handleToggle","check","column","splice","listItemStyle","Dialog","TransitionComponent","keepMounted","onClose","overflow","DialogTitle","IconButton","Close","borderTop","borderBottom","List","ListItem","Checkbox","edge","tabIndex","disableRipple","Autocomplete","options","currentColumn","newColumn","newSelectData","findIndex","innerText","currentSelectColumn","currentDataColumn","newDataColumn","getOptionDisabled","option","disableClearable","getOptionLabel","renderInput","params","disabled","textFieldStyles","DialogActions","flexWrap","S","text","searchable","orderable","setItem","tHeadFilteredColumnUpdate","bgColor","boxShadow","OtherMenuComponent","columns","dataForHeader","navigate","useNavigate","openJustin","setOpenjustin","justinRef","openNp","setOpenNp","newPostRef","openPrint","setOpenPrint","printRef","successAlertAll","disp","handleClickJustinItem","withReactContent","Swal","fire","title","icon","confirmButtonColor","confirmButtonText","showCancelButton","cancelButtonColor","cancelButtonText","then","result","isConfirmed","requestPostTemplate","handleHover","handlePrintTTN","getPrintTtn","orders","handleExportExcel","Number","dataForFile","fromEntries","row","ws","XLSX","key","s","font","sz","bold","rgb","bottom","left","right","alignment","wrapText","max_width","v","wch","wb","Sheets","SheetNames","excelBuffer","bookType","Blob","fileSaver","Settings","onMouseEnter","KeyboardArrowRightOutlined","Popper","anchorEl","current","role","undefined","placement","onMouseLeave","Paper","MenuList","getNewPostTtnDelete","getNewPostTtnReturn","autoUpdate","getRowsAfterAdd","RemoveOrderFromId","bodyTableRows","paramsCount","searchParamCount","number","setNumber","autoUdatesTime","autoupdate","isAutoUdate","isAutoUpdate","isGrabAll","isAllListProducts","timer","setTimer","console","log","time","setInterval","handleReload","stopTimer","clearInterval","getAllStatuses","clasListContainer","component","buttonBoxStyle","getClouseTableCreate","startIcon","Add","fill","marginTop","CountUpdate","textAlign","paddingLeft","paddingRight","tooltip","newSelected","getselected","BuildOutlined","ReplayOutlined","onKeyDown"],"sourceRoot":""}