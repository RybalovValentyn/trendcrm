{"version":3,"file":"static/js/551.4e5b1916.chunk.js","mappings":"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","sources":["components/inputs/fileInput/fileInput.js","components/tableBody/pages/modals/modalcomponent/exportExel.jsx","components/tableBody/pages/order/createHead/input.js"],"sourcesContent":["\r\nimport { Box, FormControl, Input , FormLabel, Typography  } from '@mui/material'\r\nimport { useState, useRef } from 'react'\r\n\r\n\r\nexport const InputFile = ({func})=>{\r\n\r\n  const [labelText, setLabelText] =useState('Вибаріть файл:');\r\n  const fileInput = useRef();\r\n\r\n  const handleChange =(e) =>{\r\n    e.preventDefault();\r\n  setLabelText(e.target.value?e.target.value:'Вибаріть файл:');\r\n \r\n  }\r\n\r\n    return (\r\n        <FormControl >\r\n          <Box sx={{ display: 'flex', width: '100%', alignItems: 'center',   }} >\r\n\r\n          <Typography sx={{display: 'block',  }}>{labelText}</Typography>\r\n          <FormLabel  sx={{border: '1px solid #c0c0c0',\r\n                     padding: '4px 10px', maxWidth: '200px' ,\r\n                      borderRadius: '4px', display: 'block',\r\n                       cursor: 'pointer', marginLeft: 'auto',\r\n                      minWidth: '180px' , fontSize: '13px', color: '#383838'\r\n                      \r\n                      }}  htmlFor=\"uploads\">{'Додати файл .xls'}</FormLabel>\r\n\r\n          <Input onChange={handleChange} ref={fileInput}  sx={{ width: '0', height: '0', opasity: 1}} type=\"file\" id=\"uploads\" name=\"uploads\" accept=\".xlsx\"/>\r\n \r\n          \r\n          </Box>\r\n      </FormControl>\r\n    )\r\n}","import DialogContent from '@mui/material/DialogContent';\r\nimport { useDispatch, useSelector,  } from 'react-redux';\r\nimport { getOpenTableCreate, alertMessageUpdate, autoUpdate } from '../../../../../redux/ordersReduser';\r\nimport { InputFile } from '../../../../inputs/fileInput/fileInput';\r\nimport { MenuItem, Select, Box, Typography, OutlinedInput, IconButton } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { selectStyles } from '../../order/createHead/input';\r\nimport { ModalComponent } from '../modalComponent';\r\nimport file from '../../../../../tpl/Import template.xlsx';\r\nimport { setFileExcelSend, getFilteredOrders,getAllOrders  } from '../../../../../redux/asyncThunc';\r\n\r\n\r\nconst ExportExcelComponent=()=>{\r\n    const dispatch = useDispatch();\r\n    const open = useSelector((state) => state.ordersAll.modalControl.open_modal_component);\r\n    const [url, setUrl] = useState(null)\r\n    const message = useSelector((state) =>state.ordersAll.messageSendFile)\r\n    const filteredRows = useSelector((state) => state.ordersAll.tHeadColumnFiltered);\r\n\r\n  const handleClouse =(e)=>{\r\n        dispatch(getOpenTableCreate({id: 'open_modal_component', str: false}));\r\n        dispatch(autoUpdate({id: 'messageSendFile', str: ''}));\r\n        if (message === 'Заказы импортированы') {\r\n          getUpdate()\r\n        }\r\n        \r\n      }\r\n\r\n  const handleSendFile=()=>{\r\nconst element = document.getElementById('uploads');\r\nconst selectedFile = element.files[0]\r\nif (selectedFile) {\r\n  dispatch(setFileExcelSend(selectedFile)) \r\n} else dispatch(alertMessageUpdate({message: 'idSelectedFile', type: 'warn'}))\r\n      \r\n    }\r\n const getUpdate = ()=>{  \r\n      if (filteredRows?.length > 0) {\r\n        dispatch(getFilteredOrders())\r\n      } else dispatch(getAllOrders())\r\n    }\r\nconst Component =()=>(\r\n   \r\n        <DialogContent>\r\n        \r\n        <Box sx={{display: 'flex', justifyContent: 'space-between', width: '100%'}}>\r\n        <Typography >{'Дія:'}</Typography>\r\n        </Box >\r\n        <InputFile/>\r\n\r\n        <Typography >{'Приклад заповнення тіблиці:'}</Typography>\r\n        <ol start='1' style={{margin: '10px', listStyle: '-moz-initial'}} >\r\n          <li style={{margin: '10px'}}>\r\n            <a style={{color: '#1E88E5'}} href='https://docs.google.com/spreadsheets/d/1zhkvEJqd4t3Dy2OWgoucgpxZp0W01Roy/edit#gid=2068782396' target='_blank' rel=\"noreferrer\"> Google таблиця</a>\r\n          </li>\r\n          <li style={{margin: '10px'}}>\r\n            <a style={{color: '#1E88E5'}} href={file} download='Import template.xlsx' > Завантажити приклад (.xlsx)</a>\r\n          </li>\r\n        </ol>\r\n        <Typography  sx={{color: 'red'}}>* - обовязкове поле.</Typography>\r\n        <ul style={{margin: '10px 0px'}}>\r\n          <li>\r\n          <Typography sx={{fontSize: '13px'}}>За замовчуванням:</Typography>\r\n          </li>\r\n          <li>\r\n          <Typography  sx={{fontSize: '13px'}}>\"Статус\" - Новий</Typography>\r\n          </li>\r\n          <li>\r\n          <Typography  sx={{fontSize: '13px'}}>\"Відповідальний\" - Admin</Typography>\r\n          </li>\r\n          <li>\r\n          <Typography  sx={{fontSize: '13px'}}>\"Контрагент НП\" - вибранний в системі.</Typography>\r\n          </li>\r\n        </ul>\r\n        <ul style={{margin: '10px 0px'}}>\r\n          <li>\r\n          <Typography  sx={{fontSize: '13px'}}>Стандартні значення:</Typography>\r\n          </li>\r\n          <li>\r\n          <Typography  sx={{fontSize: '13px'}}>\"Пошта\" - 'УкрПошта', 'Нова Пошта'</Typography>\r\n          </li>\r\n          <li>\r\n          <Typography  sx={{fontSize: '13px'}}>\"Спосіб оплати\" - 'Наложенний', 'Предплата', 'Оплачено'</Typography>\r\n          </li>\r\n          <li>\r\n          <Typography  sx={{fontSize: '13px'}}>Формат дати - '2021-12-30 24:59:59'</Typography>\r\n          </li>\r\n        </ul>\r\n\r\n        <Typography  sx={{fontSize: '13px'}}>Если в системе нет пользователя с именем указаным в поле \"Ответственный\", \r\n          создается новый пользователь с логином указаным в поле \"Ответственный\" и \r\n          паролем указаным в поле \"Ответственный\", группой пользователей \"Менеджер КЦ\".\r\n          Если имя пользователя указано в кирилеце логин будет \"user\", пароль \"name\".\r\n        </Typography>\r\n        <Typography  sx={{fontSize: '13px', margin: '10px 0px'}}>\"Контрагент НП\" учитывается только при заполненном поле \"ТТН\" и должен быть создан в системе заранее.</Typography>\r\n        <Typography  sx={{fontSize: '13px'}}>Структура поля \"Товары*\":</Typography>\r\n        <Typography  sx={{fontSize: '13px'}}>Название товара 1 - количество товара 1;</Typography>\r\n        <Typography  sx={{fontSize: '13px'}}>або</Typography>\r\n        <Typography  sx={{fontSize: '13px'}}>&#123; id товара в CRM &#125; - количество товара;</Typography>\r\n        <Typography  sx={{fontSize: '13px',display: 'block', margin: '10px 0px'}}>При импорте страница будет заблокирована до конца импорта.</Typography>\r\n          {message?<Typography  sx={{fontSize: '16px', color: 'red'}}>{message}</Typography>:null}\r\n        </DialogContent> \r\n    )\r\n\r\n\r\n    return(\r\n\r\n        <ModalComponent Component={Component} funcOnClouse={handleClouse} open={open} closeButtonText={'Закрити'} sendButtonText={'Завантаити'} titleText={\"Імпорт замовлень з Excel\"}\r\n         funcOnSend={handleSendFile} borderHeader={true} borderAction={false} alignAction={false} isAutoclouse={true} />\r\n       )\r\n};\r\nexport default ExportExcelComponent","import {styled } from '@mui/material/styles';\r\nimport { InputBase, TextField } from '@mui/material';\r\nimport { colorsRef } from '../../../../../consts/colorConstants';\r\n\r\n\r\n\r\nexport const StyledextField = styled(TextField)({\r\n   '& label': {\r\n    color: '#777777 !important',\r\n    top:'-18px'\r\n  },\r\n  '& label.Mui-focused': {\r\n    display: 'none',\r\n    opasity: 0,\r\n\r\n  },\r\n\r\n    '& .MuiInputBase-input': {\r\n        borderRadius: '4px ',\r\n        position: 'relative',\r\n        fontSize: '12px',\r\n        padding: '0',         \r\n        color: colorsRef.inputHeadTextColor, \r\n     \r\n        },\r\n      '& .MuiOutlinedInput-root': {\r\n       \r\n        '& fieldset': {\r\n          color: colorsRef.inputHeadTextColor,\r\n          border: 'none !important',\r\n           \r\n        },\r\n       '&.Mui-focused fieldset': {\r\n        border: 'none !important',\r\n         \r\n      }},\r\n      '& .MuiInputBase-root': {\r\n         miWidth: '80px',\r\n         padding: '3px 0px 1px 8px',\r\n         minWidth: '80px',\r\n         marginLeft: '10px',\r\n         marginRight: '10px',\r\n        \r\n        },\r\n      '& div.MuiFormControl-root':{\r\n        position: 'relative',\r\n       \r\n       },\r\n    '& .MuiButtonBase-root':{\r\n        padding: '0px',\r\n        width: 0,\r\n        height: 0,\r\n        position: 'absolute',\r\n        zIndex: -2,\r\n        top: 0\r\n\r\n    },\r\n    // '& .MuiSvgIcon-root':{\r\n    //     width: 0,\r\n    //     height: 0,\r\n    //     position: 'absolute',\r\n    //     zIndex: -2,\r\n    //     top: 0\r\n    // },\r\n\r\n  });\r\n\r\n\r\n\r\n\r\nexport const StyledInput = styled(InputBase)(({ theme }) => ({\r\n  \"& .Mui-disabled\":{\r\n    backgroundColor: '#EEEEEE',\r\n    cursor: 'not-allowed'\r\n  },\r\n    '& .MuiInputBase-input': {\r\n      borderRadius: '4px',\r\n      position: 'relative',\r\n      fontSize: '12px',\r\n      border: `1px solid ${colorsRef.inputHeadBorderColor}`,\r\n      padding: '2px 12px ',\r\n      color: colorsRef.inputHeadTextColor, \r\n      width: '100%', \r\n      minWidth: '85px',\r\n\r\n    },\r\n\r\n\r\n  }));\r\n\r\n  export const selectStylesCheck = {\r\n    '& .MuiInputBase-input': {     \r\n      maxHeight: '23px',\r\n      lineHeight: 1.5,\r\n      border: `1px solid ${colorsRef.inputHeadBorderColor}`,\r\n    borderRadius: '4px',\r\n    color: colorsRef.inputTextColor,\r\n    position: 'relative',\r\n    backgrounColor: '#fff',\r\n    fontSize: '12px',\r\n    padding: '2px 32px 2px 12px',\r\n    minWidth: '65px',\r\n    maxWidth: '86px',  \r\n   \r\n  },\r\n\r\n  }\r\n\r\n  export const selectStyles = {\r\n    '& .MuiInputBase-input': {     \r\n      // maxHeight: '32px',\r\n      // height: '32px',\r\n    lineHeight: 1.5,\r\n    borderRadius: '4px',\r\n    color: colorsRef.inputTextColor,\r\n    position: 'relative',\r\n    backgrounColor: '#fff',\r\n    fontSize: '12px',\r\n    padding: '6px 32px 6px 12px',\r\n    minWidth: '135px',\r\n   \r\n  },\r\n  \r\n  }"],"names":["InputFile","func","useState","labelText","setLabelText","fileInput","useRef","sx","display","width","alignItems","border","padding","maxWidth","borderRadius","cursor","marginLeft","minWidth","fontSize","color","htmlFor","onChange","e","preventDefault","target","value","ref","height","opasity","type","id","name","accept","dispatch","useDispatch","open","useSelector","state","ordersAll","modalControl","open_modal_component","message","messageSendFile","filteredRows","tHeadColumnFiltered","getUpdate","length","getFilteredOrders","getAllOrders","Component","DialogContent","Box","justifyContent","Typography","start","style","margin","listStyle","href","rel","file","download","funcOnClouse","getOpenTableCreate","str","autoUpdate","closeButtonText","sendButtonText","titleText","funcOnSend","selectedFile","document","getElementById","files","setFileExcelSend","alertMessageUpdate","borderHeader","borderAction","alignAction","isAutoclouse","StyledInput","styled","TextField","top","position","colorsRef","miWidth","marginRight","zIndex","InputBase","theme","backgroundColor","selectStylesCheck","maxHeight","lineHeight","backgrounColor","selectStyles"],"sourceRoot":""}