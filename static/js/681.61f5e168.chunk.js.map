{"version":3,"file":"static/js/681.61f5e168.chunk.js","mappings":"8QA4EA,UAhEA,WAA6B,IAAD,EAC1B,GAA0BA,EAAAA,EAAAA,UAAS,GAAE,eAA9BC,EAAK,KACd,GADwB,MACgBC,EAAAA,EAAAA,OAAiB,eAApCC,GAAF,KAAiB,MAE9BC,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,UAAUC,WAAW,IAC7DC,GAAWC,EAAAA,EAAAA,MAWTC,GAAU,GACdC,gBAAiBC,EAAAA,EAAAA,aAAoB,sBAC9BC,EAAAA,EAAAA,eAA8B,CACnC,iBAAkB,CAAEC,QAAS,IAC7BC,UAAW,UACZ,SACD,uBAAwB,CACtBJ,gBAAiB,OACjBK,MAAO,IACR,GAGCC,EAAa,SAACC,GAClB,IAAIC,EAAMD,EAAEE,OAAOC,GAEnBb,GAASc,EAAAA,EAAAA,IAAW,CAACD,GAAI,QAASF,IAAK,KACvCjB,GAAgBqB,EAAAA,EAAAA,IAAmB,CAAEC,OAAQL,IAC/C,EAEE,OACE,SAAC,IAAG,CAACM,GA5BS,CACdC,SAAU,EACVC,SAAU,OACVhB,gBAAiB,OACjBI,UAAW,QAwBQ,UACjB,UAAC,IAAI,CACHf,MAAOA,EAEP4B,QAAQ,aACRC,eAAa,EACb,aAAW,8BACXJ,GAAIf,EAAW,UAGfP,EAAS2B,KAAI,SAACC,EAAKC,GAAG,OACtB,SAAC,IAAG,CAACC,QAAShB,EAAaI,GAAIU,EAAIV,GACnCI,GAAI,CAAES,UAAU,aAAD,OAAeH,EAAII,OAASC,QAAS,WAAWC,SAAU,OAAOC,MAAO1B,EAAAA,EAAAA,mBACvFD,gBAAiBC,EAAAA,EAAAA,mBAA8B2B,SAAU,cAAeC,UAAW,OAASzB,UAAW,OACvG0B,OAAQ,kBAAmBC,cAAe,OAC5C,iBAAkB,CAAC/B,gBAAiB,OAAO2B,MAAO1B,EAAAA,EAAAA,qBAGtC+B,MAAK,UAAMZ,EAAIa,KAAI,aAAKb,EAAIc,QAAjCb,EAA4C,KAIlD,SAAC,IAAa,CAACc,UAAU,QAKhC,C","sources":["components/tableBody/pages/order/tableInBody.jsx"],"sourcesContent":["import {useState, useEffect} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Tabs, { tabsClasses } from '@mui/material/Tabs';\r\nimport {Tab} from '@mui/material';\r\nimport {colorsRef} from '../../../../consts/colorConstants';\r\n\r\nimport {AddStatusForm} from '../modals/modalAddStatus';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getSortDate, autoUpdate } from '../../../../redux/ordersReduser';\r\nimport { getAllOrders } from '../../../../redux/asyncThunc';\r\nimport { useParams, useSearchParams, useLocation,useNavigate, createSearchParams } from \"react-router-dom\";\r\n\r\nfunction ScrollTabsButton() {\r\n  const [value, setValue] = useState(0);\r\nconst [searchParams, setSearchParams] = useSearchParams();\r\n\r\nconst statuses = useSelector((state) => state.ordersAll.getStatuses);\r\nconst dispatch = useDispatch();\r\n\r\n\r\n  const boxStyles={\r\n    flexGrow: 1,\r\n    maxWidth: '100%',\r\n    backgroundColor: '#fff',\r\n    maxHeight: '32px',\r\n\r\n  }\r\n\r\n  const tabsStyles ={\r\n    backgroundColor: colorsRef.tabBgColor,\r\n    [`& .${tabsClasses.scrollButtons}`]: {\r\n      '&.Mui-disabled': { opacity: 0.3 },\r\n      maxHeight: '32px',\r\n    },\r\n    '& .MuiTabs-indicator': {\r\n      backgroundColor: '#fff',\r\n      width: 0,\r\n    },\r\n   }\r\n\r\nconst handleClick =(e)=>{\r\n  let str = e.target.id;\r\n  let id = 'status_name';  \r\n  dispatch(autoUpdate({id: 'start', str: 0}));\r\n  setSearchParams(createSearchParams({ status: str }));\r\n}\r\n\r\n  return (\r\n    <Box sx={boxStyles} >\r\n      <Tabs\r\n        value={value}\r\n        // onChange={handleChange}\r\n        variant=\"scrollable\"\r\n        scrollButtons\r\n        aria-label=\"visible arrows tabs example\"\r\n        sx={tabsStyles}\r\n      >\r\n          \r\n       {statuses.map((tab, ind) =>(        \r\n        <Tab onClick={handleClick} id={tab.id}\r\n        sx={{ borderTop: `6px solid ${tab.style}`, padding: '0px 10px',fontSize: '12px',color: colorsRef.tabHeaderTextColor,\r\n        backgroundColor: colorsRef.tableHeaderBgColor, minWidth: 'min-content', minHeight: '32px',  maxHeight: '32px', \r\n        margin: '0px 1px 0px 1px', textTransform: 'none',\r\n      '&.Mui-selected': {backgroundColor: '#fff',color: colorsRef.tabHeaderTextColor,\r\n         }\r\n      }}\r\n        key={ind} label= {`${tab.name}: ${tab.count}`} />\r\n       \r\n       ))}\r\n       \r\n       <AddStatusForm isbutton={true}/>\r\n      </Tabs>\r\n     \r\n    </Box> \r\n  );\r\n}\r\nexport default ScrollTabsButton"],"names":["useState","value","useSearchParams","setSearchParams","statuses","useSelector","state","ordersAll","getStatuses","dispatch","useDispatch","tabsStyles","backgroundColor","colorsRef","tabsClasses","opacity","maxHeight","width","handleClick","e","str","target","id","autoUpdate","createSearchParams","status","sx","flexGrow","maxWidth","variant","scrollButtons","map","tab","ind","onClick","borderTop","style","padding","fontSize","color","minWidth","minHeight","margin","textTransform","label","name","count","isbutton"],"sourceRoot":""}