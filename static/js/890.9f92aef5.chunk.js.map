{"version":3,"file":"static/js/890.9f92aef5.chunk.js","mappings":"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","sources":["components/inputs/fileInput/fileInput.js","components/tableBody/pages/order/createHead/input.js","components/tableBody/pages/order/createHead/downloads.jsx","components/tableBody/pages/modals/modal.jsx","components/tableBody/pages/order/createHead/columnSettings.jsx","components/tableBody/pages/order/createHead/menuother.jsx","components/tableBody/pages/order/header.jsx","../node_modules/@mui/icons-material/BuildOutlined.js","../node_modules/@mui/icons-material/KeyboardArrowRightOutlined.js","../node_modules/@mui/icons-material/ReplayOutlined.js"],"sourcesContent":["\r\nimport { Box, FormControl, Input , FormLabel, Typography  } from '@mui/material'\r\nimport { useState } from 'react'\r\n\r\n\r\nexport const InputFile = ()=>{\r\n\r\n  const [labelText, setLabelText] =useState('Вибаріть файл:');\r\n\r\n  const handleChange =(e) =>{\r\n\r\nsetLabelText(e.target.value?e.target.value:'Вибаріть файл:')\r\n  }\r\n\r\n    return (\r\n        <FormControl >\r\n          <Box sx={{ display: 'flex', width: '100%', alignItems: 'center',   }} >\r\n\r\n          <Typography sx={{display: 'block',  }}>{labelText}</Typography>\r\n          <FormLabel  sx={{border: '1px solid #c0c0c0',\r\n                     padding: '4px 10px', maxWidth: '200px' ,\r\n                      borderRadius: '4px', display: 'block',\r\n                       cursor: 'pointer', marginLeft: 'auto',\r\n                      minWidth: '180px' , fontSize: '13px', color: '#383838'\r\n                      \r\n                      }}  htmlFor=\"uploads\">{'Додати файл .xls'}</FormLabel>\r\n\r\n          <Input onChange={handleChange}  sx={{ width: '0', height: '0', opasity: 1}} type=\"file\" id=\"uploads\" name=\"uploads\" accept=\".xls\"/>\r\n \r\n          \r\n          </Box>\r\n      </FormControl>\r\n    )\r\n}","import {styled } from '@mui/material/styles';\r\nimport { InputBase, TextField } from '@mui/material';\r\nimport { colorsRef } from '../../../../../consts/colorConstants';\r\n\r\n\r\n\r\nexport const StyledextField = styled(TextField)({\r\n   '& label': {\r\n    color: '#777777 !important',\r\n    top:'-18px'\r\n  },\r\n  '& label.Mui-focused': {\r\n    display: 'none',\r\n    opasity: 0,\r\n\r\n  },\r\n\r\n    '& .MuiInputBase-input': {\r\n        borderRadius: '4px ',\r\n        position: 'relative',\r\n        fontSize: '12px',\r\n        padding: '0',         \r\n        color: colorsRef.inputHeadTextColor, \r\n     \r\n        },\r\n      '& .MuiOutlinedInput-root': {\r\n       \r\n        '& fieldset': {\r\n          color: colorsRef.inputHeadTextColor,\r\n          border: 'none !important',\r\n           \r\n        },\r\n       '&.Mui-focused fieldset': {\r\n        border: 'none !important',\r\n         \r\n      }},\r\n      '& .MuiInputBase-root': {\r\n         miWidth: '80px',\r\n         padding: '3px 0px 1px 8px',\r\n         minWidth: '80px',\r\n         marginLeft: '10px',\r\n         marginRight: '10px',\r\n        \r\n        },\r\n      '& div.MuiFormControl-root':{\r\n        position: 'relative',\r\n       \r\n       },\r\n    '& .MuiButtonBase-root':{\r\n        padding: '0px',\r\n        width: 0,\r\n        height: 0,\r\n        position: 'absolute',\r\n        zIndex: -2,\r\n        top: 0\r\n\r\n    },\r\n    // '& .MuiSvgIcon-root':{\r\n    //     width: 0,\r\n    //     height: 0,\r\n    //     position: 'absolute',\r\n    //     zIndex: -2,\r\n    //     top: 0\r\n    // },\r\n\r\n  });\r\n\r\n\r\n\r\n\r\nexport const StyledInput = styled(InputBase)(({ theme }) => ({\r\n  \"& .Mui-disabled\":{\r\n    backgroundColor: '#EEEEEE',\r\n    cursor: 'not-allowed'\r\n  },\r\n    '& .MuiInputBase-input': {\r\n      borderRadius: '4px',\r\n      position: 'relative',\r\n      fontSize: '12px',\r\n      border: `1px solid ${colorsRef.inputHeadBorderColor}`,\r\n      padding: '2px 12px ',\r\n      color: colorsRef.inputHeadTextColor, \r\n      width: '100%', \r\n      minWidth: '85px',\r\n\r\n    },\r\n\r\n\r\n  }));\r\n\r\n  export const selectStylesCheck = {\r\n    '& .MuiInputBase-input': {     \r\n      maxHeight: '23px',\r\n      lineHeight: 1.5,\r\n      border: `1px solid ${colorsRef.inputHeadBorderColor}`,\r\n    borderRadius: '4px',\r\n    color: colorsRef.inputTextColor,\r\n    position: 'relative',\r\n    backgrounColor: '#fff',\r\n    fontSize: '12px',\r\n    padding: '2px 32px 2px 12px',\r\n    minWidth: '65px',\r\n    maxWidth: '86px',  \r\n   \r\n  },\r\n\r\n  }\r\n\r\n  export const selectStyles = {\r\n    '& .MuiInputBase-input': {     \r\n      // maxHeight: '32px',\r\n      // height: '32px',\r\n    lineHeight: 1.5,\r\n    borderRadius: '4px',\r\n    color: colorsRef.inputTextColor,\r\n    position: 'relative',\r\n    backgrounColor: '#fff',\r\n    fontSize: '12px',\r\n    padding: '6px 32px 6px 12px',\r\n    minWidth: '135px',\r\n   \r\n  },\r\n  \r\n  }","import { Select, MenuItem, ListItemText, InputBase, InputAdornment } from '@mui/material';\r\nimport LocalMallOutlinedIcon from '@mui/icons-material/LocalMallOutlined';\r\nimport { useDispatch, useSelector,  } from 'react-redux';\r\nimport { useState, forwardRef } from 'react';\r\nimport { getOpenTableCreate } from '../../../../../redux/ordersReduser';\r\nimport { selectStyles, svgStyle, listStyle } from './style';\r\nimport { calculateNewValue } from '@testing-library/user-event/dist/utils';\r\nimport { setOrderReturn, getFilteredOrders, getAllOrders, setOrderPayment } from '../../../../../redux/asyncThunc';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 4;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n    maxHeight: ITEM_HEIGHT * 5 + ITEM_PADDING_TOP,\r\n    width: 180,\r\n    },\r\n  },\r\n};\r\n\r\n\r\n\r\nexport const DownloadComponent=()=>{\r\nconst dispatch = useDispatch();\r\nconst [open, setOpen] = useState(false);\r\nconst filteredRows = useSelector((state) => state.ordersAll.tHeadColumnFiltered);\r\nlet selected =  sessionStorage.getItem(\"selected\").split(',');\r\n\r\nconst handleClickOpen = () => {\r\n  setOpen(!open);\r\n};\r\n\r\nconst handleClickExel = ()=>{    \r\n  dispatch(getOpenTableCreate({id: 'opendownload', str: true}));\r\n};\r\n\r\nconst handleChange = ()=>{    \r\nsetOpen(!open);\r\n};\r\nconst handleReturnProduct =(value)=>{\r\n  let length = selected.length\r\n  if (length === 1 && selected[0] !== '') {\r\n    dispatch(setOrderReturn({id: selected[0], value}));  \r\n  } else if (length > 1) {\r\n    selected.map((id)=>{\r\n      if (id !== '') {\r\n        dispatch(setOrderReturn({id,value}))\r\n      }  \r\n    })\r\n  }else if (length === 0) {\r\n    return\r\n  }\r\ngetUpdate()\r\n}\r\n\r\nconst handlePaymentReceived=(value)=>{\r\n  let length = selected.length\r\n  if (length === 1 && selected[0] !== '') {\r\n    dispatch(setOrderPayment({id: selected[0], value}));  \r\n  } else if (length > 1) {\r\n    selected.map((id)=>{\r\n      if (id !== '') {\r\n        dispatch(setOrderPayment({id,value}))\r\n      }  \r\n    })\r\n  }else if (length === 0) {\r\n    return\r\n  }\r\ngetUpdate()\r\n}\r\n\r\nconst handleCancelled =()=>{\r\n  handleReturnProduct('0')\r\n  handlePaymentReceived('0')\r\n}\r\nconst getUpdate = ()=>{\r\n  if (filteredRows?.length > 0) {\r\n    dispatch(getFilteredOrders())\r\n  } else dispatch(getAllOrders())\r\n }\r\n\r\nreturn(\r\n    <Select \r\n    id=\"download_exel\"\r\n    value={''}\r\n    open={open}\r\n    onChange={handleChange}\r\n    input={<InputBase onClick={handleClickOpen} startAdornment={\r\n\r\n   <InputAdornment   position=\"start\">\r\n        <LocalMallOutlinedIcon sx={svgStyle}/>\r\n      </InputAdornment>\r\n    }  sx={selectStyles}/>}\r\n    MenuProps={MenuProps}\r\n  >   \r\n      <MenuItem value={'exel'} sx={listStyle} >\r\n        <ListItemText onClick={handleClickExel} primary={'Завантажити Exel'} /> \r\n     \r\n      </MenuItem>\r\n      <MenuItem value={'back'} sx={listStyle} >\r\n        <ListItemText onClick={()=>handleReturnProduct('1')} primary={'Повернення товару'} />\r\n      </MenuItem>\r\n      <MenuItem value={'cost'} sx={listStyle} >\r\n        <ListItemText onClick ={()=>handlePaymentReceived('1')} primary={'Кошти отримано'} />\r\n      </MenuItem>\r\n      <MenuItem value={'cancel'} sx={listStyle} >\r\n        <ListItemText onClick ={handleCancelled} primary={'Відміна'} />\r\n      </MenuItem>\r\n\r\n  </Select>\r\n)\r\n}","import Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\r\nimport { useDispatch, useSelector,  } from 'react-redux';\r\nimport { forwardRef } from 'react';\r\nimport { getOpenTableCreate } from '../../../../redux/ordersReduser';\r\nimport { InputFile } from '../../../inputs/fileInput/fileInput';\r\nimport { StyledButton } from '../../../buttons/buttons'; \r\nimport { colorsRef } from '../../../../consts/colorConstants';\r\nimport { MenuItem, Select, Box, ListItemText, InputBase, Typography, OutlinedInput, IconButton } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { selectStyles } from '../order/createHead/input';\r\n\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {       \r\n    return <Slide direction=\"down\" ref={ref} {...props} />;\r\n  });\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 4;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n        overflowX: 'hidden',\r\n      },\r\n    },\r\n  };\r\n\r\n\r\nexport const ModalMenu = () =>{\r\n    const dispatch = useDispatch();\r\n    const openDownExel = useSelector((state) => state.ordersAll.modalControl.opendownload);\r\n    const [group, setGroup] = useState('Повернення товару')\r\n    const data=[{id:1, name:'Повернення товару' }, {id:2, name:'Кошти отримані'}]\r\n\r\n\r\nconst handleClouse =(e)=>{\r\n  dispatch(getOpenTableCreate({id: 'opendownload', str: false}));\r\n}\r\nconst handleSelectChange =(e)=>{\r\n  setGroup(e.target.value)\r\n}\r\n\r\nconst handleSendFile=()=>{\r\n\r\n}\r\n    return(\r\n        <Dialog\r\n        open={openDownExel}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClouse}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n        sx={{overflow: 'hidden', '& .MuiPaper-root': {width: '520px', bottom: '10%' }}}\r\n          >\r\n            <Box onClick={handleClouse} sx={{display: 'flex', justifyContent: 'space-between'}}>\r\n            <DialogTitle >{\"Завантажити Exel \"}</DialogTitle>\r\n          <IconButton  component=\"label\">\r\n            <HighlightOffIcon />\r\n          </IconButton>\r\n            </Box>\r\n\r\n        <DialogContent>\r\n        \r\n        <Box sx={{display: 'flex', justifyContent: 'space-between', width: '100%'}}>\r\n        <Typography>{'Дія:'}</Typography>\r\n\r\n        <Select \r\n          id=\"3\"\r\n           value={group}\r\n          onChange={handleSelectChange}\r\n          input={<OutlinedInput  sx={selectStyles}/>}\r\n          MenuProps={MenuProps}\r\n          >          \r\n        {data.map((name, ind)=>(\r\n        <MenuItem sx={{fontSize: '14px' }} id={name.id} key ={ind} value={name.name} >      \r\n        {name.name}\r\n      </MenuItem>\r\n\r\n))}\r\n\r\n       </Select>\r\n        </Box >\r\n        <InputFile/>\r\n        </DialogContent>\r\n        <DialogActions sx={{width: '100%'}}>\r\n\r\n        <StyledButton\r\n        text={'Закрити'}\r\n        func= {handleClouse}\r\n        border= {'#7bb31a'} \r\n           />\r\n\r\n      <StyledButton            \r\n        text={'Відправити'}\r\n        func= {handleSendFile}\r\n        border= {colorsRef.btnAddBorderColor}\r\n               \r\n           />\r\n\r\n        </DialogActions>\r\n      </Dialog> \r\n    )\r\n}","import { useDispatch, useSelector } from 'react-redux';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport { useState, forwardRef, useEffect } from 'react';\r\nimport { getOpenTableCreate, tHeadFilteredColumnUpdate } from '../../../../../redux/ordersReduser';\r\nimport {Checkbox, IconButton } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { getFilteredOrders, getAllOrders } from '../../../../../redux/asyncThunc';\r\nimport { colorsRef } from '../../../../../consts/colorConstants';\r\nimport { StyledButton } from '../../../../buttons/buttons';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport {translater} from '../translate';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { textFieldStyles } from './style';\r\n\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"down\" ref={ref} {...props} />;\r\n  });\r\n\r\n\r\nexport const ColumnSettings=()=>{\r\n    const dispatch = useDispatch();\r\n    const isOpenColumnSettings = useSelector((state) => state.ordersAll.modalControl.columnSettings);\r\n    const tHeadColumn = useSelector((state) => state.ordersAll.tHeadColumn)\r\n    const filteredColumn = useSelector((state) => state.ordersAll.tHeadColumnFiltered);\r\n    const [columnsCopy, setColumnsCopy] = useState([]);\r\n    const copyTranslster = Object.entries(translater).map((str, i)=>({id: str[0], str: str[1], num: i}));\r\n    const [search, setSearch] = useState('')\r\n\r\n    useEffect(() => {        \r\n        if (tHeadColumn.length > 0 && filteredColumn.length === 0) {            \r\n            let columnCopy = copyTranslster.map((col, i)=>({num:`${i}`, str: col.str, id: col.id, checked: false}))\r\n   \r\n            setColumnsCopy([...columnCopy])\r\n        } else if (tHeadColumn.length > 0 && filteredColumn.length > 0) {\r\n\r\n          let secondColumn = [];\r\n      let firstColumn = filteredColumn.map((col, i)=>{\r\n              let filt =  copyTranslster.find(n=>n.id === col.data)\r\n              if (filt) {\r\n              return {num: col.num, str: filt.str, id: filt.id, checked: true}\r\n              } \r\n              })\r\n       copyTranslster.map((col, i)=>{\r\n                let filtered = filteredColumn.find(n=>n.data === col.id)\r\n                if (!filtered) {\r\n                     secondColumn.push({num:`${i}`, str: col.str, id: col.id, checked: false}) \r\n                }})  \r\n  \r\n            setColumnsCopy([...firstColumn.concat(secondColumn)])  ;\r\n        }        \r\n        }, [isOpenColumnSettings]);\r\n        \r\n\r\n   const handleClose = () => {\r\n        let id = 'columnSettings';\r\n        let str = !isOpenColumnSettings;\r\n        dispatch(getOpenTableCreate({id, str}))\r\n\r\n    };\r\n\r\n\r\n    const handleToggle =(e) => {\r\n        let ind = e.target.id\r\n        let check = e.target.checked;\r\n        let str = columnsCopy.find(n=>n.id === e.target.name)        \r\n        let column = {num: str.num, str: str.str, id: str.id, checked: check } \r\n                columnsCopy.splice(ind,1,column);\r\n                setColumnsCopy([...columnsCopy]);  \r\n                };\r\n\r\n    const handleSelectChange =(e,ind)=>{\r\n      let currentColumn = e.target.id.split('-')[0];\r\n      let newColumn = e.target.id.split('-')[2];\r\n      let newSelectData = {};\r\n      if (!currentColumn || !newColumn ) {\r\n        return\r\n      }\r\n      if (search !== '') {\r\n        newColumn = columnsCopy.findIndex(n=>n.str === e.target.innerText)\r\n        newSelectData = columnsCopy.find(n=>n.str === e.target.innerText)\r\n      } else if (search === '') {\r\n        newSelectData = columnsCopy[newColumn];\r\n      }\r\n    let currentSelectColumn = columnsCopy[currentColumn];\r\n    let currentDataColumn = {num: currentColumn.num, str: currentSelectColumn.str, id: currentSelectColumn.id, checked: false}\r\n    let newDataColumn = {num: ind, str: newSelectData.str, id: newSelectData.id, checked: true }\r\n\r\n     columnsCopy.splice(ind,1,newDataColumn);\r\n     columnsCopy.splice(newColumn,1,currentDataColumn);\r\n      setColumnsCopy([...columnsCopy]);\r\n      setSearch('')\r\n    }\r\n\r\n const handleCloseApply =()=>{\r\n        let filter = columnsCopy.filter(n=>n.checked === true).map((col, i)=>({num:`${i}`,\r\n                     data: col.id, searchable: true, orderable: true, search:{value: ''}}));\r\n        sessionStorage.setItem(\"selected\", '');\r\n      dispatch(tHeadFilteredColumnUpdate(filter));\r\n      dispatch(getFilteredOrders());\r\n      handleClose();\r\n        }\r\n\r\nconst handleFResetFilters =()=>{\r\n    dispatch(tHeadFilteredColumnUpdate([]));\r\n    dispatch(getAllOrders())\r\n    handleClose();\r\n};\r\n\r\nconst listItemStyle ={\r\n  maxWidth: '455px',\r\n  minWidth: '200px',\r\n  alignItems: 'center'\r\n}\r\n\r\n\r\n    return(\r\n        <Dialog\r\n        open={isOpenColumnSettings}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n        sx={{overflow: 'hidden', '& .MuiPaper-root': {width: '500px', },}}\r\n      >\r\n        <DialogTitle sx={{display: 'flex',justifyContent: 'space-between'}}>{\"Відображення на сторінці замовлень\"}\r\n        <IconButton onClick={handleClose} aria-label=\"delete\">\r\n        <CloseIcon/>\r\n      </IconButton>\r\n        \r\n        </DialogTitle>\r\n         <DialogContent sx={{height: '600px', borderTop: '2px solid #d0d0d0', borderBottom:'2px solid #d0d0d0', '@media (max-width: 520px)': {\r\n          padding: 0\r\n           },}}>\r\n\r\n       <List >\r\n      {columnsCopy.map((name, ind)=>{\r\n              return(\r\n            <ListItem key={ind} sx={listItemStyle}>\r\n                <ListItemText sx={{ maxWidth: '30px', marginRight: '10px'}} primary={`№${ind+1}`}/>\r\n             <Checkbox\r\n                  edge=\"start\"\r\n                  onChange={handleToggle}\r\n                  name={name.id}\r\n                  sx={{'@media (max-width:320px)': {marginLeft: '5px',},}}\r\n                  id={`${ind}`}\r\n                  tabIndex={-1}\r\n                checked = {name.checked}\r\n                  disableRipple\r\n                /> \r\n            <Autocomplete\r\n            sx={{ '@media (max-width: 520px)': {\r\n              width: '100%',\r\n              maxWidth: '250px',\r\n\r\n            alignItems: 'center',\r\n            }}}\r\n                name={`${ind}`}\r\n                id={`${ind}`}                \r\n                options={columnsCopy}\r\n                onChange={(e)=>handleSelectChange(e,ind)}\r\n                getOptionDisabled={(option) =>\r\n                  option.checked === true\r\n                }\r\n                value={name}\r\n                // readOnly={ind === 0}\r\n                disableClearable\r\n                getOptionLabel={(option) => option.str}\r\n                renderInput={(params) => <TextField  onChange={(e)=>setSearch(e.target.value)} disabled={name.checked}\r\n                   sx={textFieldStyles} \r\n                    {...params}/>}\r\n              />\r\n\r\n            </ListItem>\r\n        )\r\n      })}\r\n      </List>\r\n        </DialogContent>\r\n\r\n        <DialogActions sx={{justifyContent: 'center', '@media (max-width: 520px)': {flexWrap: 'wrap' } }}>\r\n        <StyledButton\r\n          text={'Застосувати'}\r\n          func= {handleCloseApply}\r\n          border='#0c4b91'\r\n          bgColor={colorsRef.btnAddBgColor}\r\n            />\r\n          <StyledButton\r\n          text={'Відмінити'}\r\n          func= {handleClose}\r\n          border={colorsRef.buttonBorderInModal}\r\n          bgColor={colorsRef.btnAddBgColor}\r\n            />\r\n          <StyledButton\r\n          text={'Скинути фільтри'}\r\n          func= {handleFResetFilters}\r\n          border={colorsRef.buttonBorderInModal}\r\n          bgColor={colorsRef.btnAddBgColor}\r\n            />\r\n        </DialogActions>\r\n      </Dialog>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import { Select, MenuItem, ListItemText, InputBase, InputAdornment, Popper, Paper, MenuList} from '@mui/material';\r\nimport { useDispatch, useSelector,  } from 'react-redux';\r\nimport { useState, forwardRef, useRef } from 'react';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport { selectStyles, svgStyle, listStyle } from './style';\r\nimport KeyboardArrowRightOutlinedIcon from '@mui/icons-material/KeyboardArrowRightOutlined';\r\nimport { getOpenTableCreate } from '../../../../../redux/ordersReduser';\r\nimport { useNavigate} from 'react-router-dom';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 4;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {    \r\n    maxHeight: ITEM_HEIGHT * 8 + ITEM_PADDING_TOP,\r\n    width: 200,\r\n    boxShadow: 'none',\r\n    border: '1px solid #d0d0d0',\r\n   },\r\n  },\r\n};\r\n\r\n\r\n\r\nexport const OtherMenuComponent=()=>{\r\nconst navigate = useNavigate();\r\nconst dispatch = useDispatch();\r\nconst [open, setOpen] = useState(false);\r\nconst [openJustin, setOpenjustin] = useState(false);\r\nconst justinRef = useRef(null);\r\nconst [openNp, setOpenNp] = useState(false);\r\nconst newPostRef = useRef(null);\r\nconst [openPrint, setOpenPrint]= useState(false);\r\nconst printRef = useRef(null);\r\n\r\nconst handleClickOpen = () => {\r\nif (!open) {\r\n  setOpen(true);\r\n} \r\n};\r\n\r\nconst handleClicSms = ()=>{    \r\n  setOpen(false);\r\n  dispatch(getOpenTableCreate({id: 'send_sms', str: true}));\r\n \r\n};\r\n\r\nconst handleMouseEnter=(e)=>{\r\n  if (open) {\r\n    setOpenNp(false)\r\n    setOpenjustin(true)\r\n    setOpenPrint(false)\r\n  }\r\n\r\n}\r\nconst handleJustinClosed=()=>{\r\n  if (open) {\r\n    setOpenjustin(false)\r\n  }  \r\n}\r\nconst handleClickJustinItem=()=>{\r\n  setOpen(false);\r\n  setOpenjustin(false);\r\n  setOpenNp(false)\r\n  setOpenPrint(false)\r\n}\r\nconst handleClickJustinItemCreate=()=>{\r\n  handleClickJustinItem();\r\n  dispatch(getOpenTableCreate({id: 'justin_create', str: true}));\r\n}\r\nconst handleMouseEnterNewPost=()=>{\r\n  handleJustinClosed()\r\n  if (open) {   \r\n    setOpenNp(true)\r\n  }\r\n}\r\n\r\nconst handlePrintTTN=()=>{\r\n\r\n}\r\nconst handlePrepayStatus=()=>{\r\n  handleClickJustinItem()\r\n  dispatch(getOpenTableCreate({id: 'prepay_update', str: true}));\r\n\r\n}\r\nconst handleUpdateOrders=()=>{\r\n  handleClickJustinItem()\r\n  let selected =  sessionStorage.getItem(\"selected\").split(',');\r\n  if (selected[0]) {\r\n    navigate(`/trendcrm/order/:${selected[0]}`);   \r\n  }\r\n}\r\n\r\nconst handleStatusUpdate=()=>{  \r\n  handleClickJustinItem()\r\n  dispatch(getOpenTableCreate({id: 'status_update', str: true})); \r\n}\r\n\r\nconst handleDateSendUpdate =()=>{\r\n  handleClickJustinItem()\r\n  dispatch(getOpenTableCreate({id: 'date_send_update', str: true}));  \r\n}\r\n\r\nconst handleExportExcel=()=>{\r\n  console.log('handleExportExcel');\r\n}\r\n\r\nconst successAlert = () => {\r\n  handleClickJustinItem()\r\n  withReactContent(Swal).fire({  \r\n        title: 'Увага!',  \r\n        text: 'Ви дійсно хочете експортувати в Exсel?',\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#d33',\r\n        cancelButtonColor: '#3085d6',\r\n        cancelButtonText: 'Ні',\r\n        confirmButtonText: 'Так експортувати',\r\n      }).then((result) => {        \r\n        if (result.isConfirmed) {\r\n            handleExportExcel()\r\n          // Swal.fire(\r\n          //   'Створено!',\r\n          //   'ЕН Justin успішно створена',\r\n          //   'success'\r\n          // )\r\n        }\r\n      }); \r\n}\r\n\r\nreturn(\r\n\r\n    <Select \r\n    id=\"other_menu\"\r\n    value={''}\r\n    open={open}\r\n    onClose={()=>openJustin?null:setOpen(false)}\r\n    input={<InputBase onClick={handleClickOpen} startAdornment={\r\n   <InputAdornment   position=\"start\">\r\n       <SettingsIcon  sx={svgStyle}/>\r\n      </InputAdornment>\r\n    }  sx={selectStyles}/>}\r\n    MenuProps={MenuProps}\r\n  >   \r\n      <MenuItem value={'sms'} sx={listStyle} onMouseEnter={handleJustinClosed} >\r\n        <ListItemText onClick={handleClicSms}  primary={'Відправити SMS'} />      \r\n      </MenuItem>\r\n\r\n      <MenuItem ref={justinRef} onMouseEnter={handleMouseEnter} value={'justin'} sx={listStyle} id={'justin'} key={'justin'} >\r\n        <ListItemText  primary={'Justin'} />\r\n        <KeyboardArrowRightOutlinedIcon fontSize='small' sx={{color: '#a0a0a0'}} />\r\n{ open? <Popper\r\n          open={openJustin}\r\n          anchorEl={justinRef.current}\r\n          role={undefined}\r\n          placement=\"left-start\"\r\n          sx={{zIndex: 1301}}\r\n          onMouseLeave={()=>setOpenjustin(false)}\r\n        >   \r\n\r\n              <Paper id={'justin_paper'}>\r\n                  <MenuList\r\n                    id=\"justin_menu\"\r\n                    aria-labelledby=\"composition-button\"\r\n                    // onKeyDown={handleListKeyDown}\r\n                    \r\n                  >\r\n                    <MenuItem sx={{fontSize: '14px'}} onClick={handleClickJustinItemCreate}>Створити ЕН</MenuItem>\r\n                    <MenuItem sx={{fontSize: '14px'}} onClick={handleClickJustinItem}>Роздрукувати ЕН</MenuItem>\r\n                    <MenuItem sx={{fontSize: '14px'}} onClick={handleClickJustinItem}>Видалити ЕН</MenuItem>\r\n                    <MenuItem sx={{fontSize: '14px'}} onClick={handleClickJustinItem}>Повернення ЕН</MenuItem>\r\n                  </MenuList>\r\n             \r\n              </Paper>\r\n           </Popper>:null}\r\n      </MenuItem>\r\n      <MenuItem ref={newPostRef} value={'newPost'} onMouseEnter={handleMouseEnterNewPost} sx={listStyle}>\r\n        <ListItemText  primary={'Нова Пошта'} />\r\n        <KeyboardArrowRightOutlinedIcon fontSize='small' sx={{color: '#a0a0a0'}} />\r\n        { open? <Popper\r\n          open={openNp}\r\n          anchorEl={newPostRef.current}\r\n          role={undefined}\r\n          placement=\"left-start\"\r\n          sx={{zIndex: 1301}}\r\n          onMouseLeave={()=>setOpenNp(false)}\r\n        >  \r\n              <Paper id={'newpost_paper'}>\r\n                  <MenuList\r\n                    id=\"newpost_menu\"\r\n                    aria-labelledby=\"composition-button\"\r\n                                       \r\n                  >\r\n                    <MenuItem sx={{fontSize: '14px'}} onClick={handleClickJustinItemCreate} onMouseEnter={()=>setOpenPrint(false)}>Створити ТТН</MenuItem>\r\n                    <MenuItem   ref={printRef}  sx={{fontSize: '14px', alignItems: 'center'}} onClick={handleClickJustinItem} onMouseEnter={()=>setOpenPrint(true)}>Роздрукувати ТТН\r\n                    <KeyboardArrowRightOutlinedIcon fontSize='small' sx={{color: '#a0a0a0', marginLeft: '15px'}} />\r\n                    { open? <Popper\r\n                          open={openPrint}\r\n                          anchorEl={printRef.current}\r\n                          role={undefined}\r\n                          placement=\"left-start\"\r\n                          sx={{zIndex: 1301}}\r\n                          onMouseLeave={()=>setOpenPrint(false)}\r\n                        >   \r\n\r\n                          <Paper id={'print_paper'}>\r\n                              <MenuList\r\n                                id=\"print_menu\"\r\n                                aria-labelledby=\"composition-button\"                                    \r\n                           >\r\n                                      <MenuItem sx={{fontSize: '14px'}} onClick={handleClickJustinItemCreate}>pdf</MenuItem>\r\n                                      <MenuItem sx={{fontSize: '14px'}} onClick={handleClickJustinItem}>pdf (зебра)</MenuItem>\r\n                                    </MenuList>\r\n                              \r\n                                </Paper>\r\n                            </Popper>:null}\r\n                    </MenuItem>\r\n                    <MenuItem sx={{fontSize: '14px'}} onClick={handleClickJustinItem} onMouseEnter={()=>setOpenPrint(false)}>Видалити ТТН</MenuItem>\r\n                    <MenuItem sx={{fontSize: '14px'}} onClick={handleClickJustinItem}>Повернення ТТН</MenuItem>\r\n                  </MenuList>\r\n             \r\n              </Paper>\r\n           </Popper>:null}\r\n      </MenuItem>\r\n      <MenuItem onMouseEnter={()=>setOpenNp(false)} onClick={handleUpdateOrders} value={'fixed'} sx={listStyle}  >\r\n        <ListItemText  primary={'Редагувати'} />\r\n      </MenuItem>\r\n      <MenuItem value={'prepay'} onClick={handlePrepayStatus} sx={listStyle}>\r\n        <ListItemText  primary={'Передплата'} />\r\n      </MenuItem>\r\n       <MenuItem value={'chnge_ststus'} onClick = {handleStatusUpdate} sx={listStyle} >\r\n        <ListItemText  primary={'Змінити статуси'} />\r\n      </MenuItem>\r\n      <MenuItem value={'schange_date'} onClick={handleDateSendUpdate} sx={listStyle} >\r\n        <ListItemText  primary={'Змінити дату відправлення'} />\r\n      </MenuItem>\r\n      <MenuItem value={'export_exel'} onClick={successAlert} sx={listStyle}>\r\n        <ListItemText  primary={'Експотр Exel'} />\r\n      </MenuItem>\r\n      <MenuItem value={'import_exel'} sx={listStyle} >\r\n        <ListItemText  primary={'Імпорт Exel'} />\r\n      </MenuItem>\r\n      <MenuItem value={'delete'} sx={listStyle} >\r\n        <ListItemText  primary={'Видалити'} />\r\n      </MenuItem>\r\n\r\n  </Select>\r\n\r\n)\r\n}","import Box from '@mui/material/Box';\r\nimport {clasListContainer, svgStyle, buttonBoxStyle, BootstrapTooltip, listStyle} from './styles';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport BuildOutlinedIcon from '@mui/icons-material/BuildOutlined';\r\nimport ReplayOutlinedIcon from '@mui/icons-material/ReplayOutlined';\r\nimport {BpCheckbox} from '../../../inputs/checkBox'\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {getOpenTableCreate, getClouseTableCreate} from '../../../../redux/ordersReduser';\r\nimport {StyledButton} from '../../../buttons/buttons';\r\nimport { colorsRef } from '../../../../consts/colorConstants';\r\nimport { useEffect, useState } from 'react';\r\nimport { searchCountUpdate, CountUpdate, autoUpdate, isGrabAll} from '../../../../redux/ordersReduser';\r\nimport { getAllOrders, getAllStatuses, getFilteredOrders } from '../../../../redux/asyncThunc';\r\nimport { DownloadComponent } from './createHead/downloads'; \r\nimport { ModalMenu } from '../modals/modal'\r\nimport { ColumnSettings } from './createHead/columnSettings';\r\nimport {OtherMenuComponent} from './createHead/menuother';\r\nimport { CustomizedCheckboxAll } from '../../../inputs/checkBox';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport { getselected } from '../../../../redux/funcReduser';\r\n\r\n\r\nfunction HeaderContainer() {\r\nconst dispatch = useDispatch();\r\nconst navigate = useNavigate();\r\nconst params = useSelector((state) => state.ordersAll.searchParams);\r\nconst copyParams = Object.values(params);\r\nconst bodyTableRows = useSelector((state) => state.ordersAll.bodyTableRows);\r\nconst paramsCount = useSelector((state) => state.ordersAll.searchParamCount);\r\nconst columns = useSelector((state) => state.ordersAll.tHeadColumn);\r\nconst [number, setNumber] = useState('');\r\nconst autoUdatesTime = useSelector((state) => state.ordersAll.autoupdate);\r\nconst isAutoUdate = useSelector((state) => state.ordersAll.isAutoUpdate);\r\nconst isGrabAll = useSelector((state) => state.ordersAll.isGrabAll);\r\nconst filteredRows = useSelector((state) => state.ordersAll.tHeadColumnFiltered);\r\nconst isAllListProducts =  useSelector((state) => state.ordersAll.isAllListProducts);\r\nlet [timer, setTimer] = useState(null);\r\n\r\nuseEffect(() => {\r\n  const searchCount = copyParams.reduce((acc, str) =>(str!==''?acc+=1:acc+=0),0);\r\n  dispatch(searchCountUpdate(searchCount));\r\n  }, [params]);\r\n\r\n  useEffect(() => {\r\n\r\nif (isAutoUdate && Number(autoUdatesTime) > 29) {\r\n  console.log('start timer');\r\nlet time = Number(autoUdatesTime)*1000\r\nsetTimer(setInterval(() => {\r\n  handleReload()\r\n\r\n}, time))  \r\n} else if (!isAutoUdate) {\r\n  stopTimer()\r\n} \r\n}, [isAutoUdate, autoUdatesTime]);\r\n\r\nuseEffect(() => {\r\n  stopTimer()\r\n  if (filteredRows.length > 0 && isAutoUdate && Number(autoUdatesTime) > 29) {\r\n    let time = Number(autoUdatesTime)*1000\r\n    setTimer(setInterval(() => {\r\n      handleReload()\r\n    \r\n    }, time)) \r\n  } else if (filteredRows.length === 0 && isAutoUdate && Number(autoUdatesTime) > 29) {\r\n    let time = Number(autoUdatesTime)*1000\r\n    setTimer(setInterval(() => {\r\n      handleReload()    \r\n    }, time))}\r\n  }, [filteredRows]);\r\n\r\nconst stopTimer = ()=>{\r\n  // console.log('stop Timer');\r\n  clearInterval(timer);\r\n  setTimer(null)\r\n}\r\n\r\nconst handleClick = ()=>{\r\n  dispatch(getClouseTableCreate())\r\n  navigate('/trendcrm/order')\r\n  \r\n}\r\n\r\n\r\nconst handleResetFilters=()=>{\r\ndispatch(CountUpdate())\r\nif (filteredRows?.length > 0) {\r\n  dispatch(getFilteredOrders())\r\n} else dispatch(getAllOrders())\r\nnavigate('/trendcrm/orders')\r\n}\r\n\r\n\r\nconst onHandleCheck=(e)=>{\r\n  console.log('autoonHandleCheck');\r\n  let check = e.target.checked\r\n  if (number === '' && check) {\r\n    // console.log(check);\r\n    setNumber(30)\r\n    dispatch(autoUpdate({id: 'autoupdate', str: 30}))\r\n    dispatch(autoUpdate({id: 'isAutoUpdate', str: check}));\r\n  } else if (!check) {\r\n    setNumber('');\r\n    dispatch(autoUpdate({id: 'isAutoUpdate', str: check}));\r\n    dispatch(autoUpdate({id: 'autoupdate', str: 0}))\r\n    stopTimer()\r\n  } \r\n  \r\n}\r\nconst handleReload =()=>{\r\n  dispatch(getAllStatuses())\r\n  if (filteredRows?.length > 0) {\r\n    dispatch(getFilteredOrders())\r\n  } else dispatch(getAllOrders())\r\n}\r\nconst handleColumnSettings=()=>{\r\n  let id = 'columnSettings';\r\n  let str = true;\r\n  dispatch(getOpenTableCreate({id, str}))\r\n}\r\n\r\nconst numberChange = (e)=>{\r\n  if (Number(e.target.value)) {\r\n    setNumber(e.target.value)\r\n  }\r\n}\r\nconst handleKeyDown=(e)=>{\r\n  if (e.key === 'Backspace') {\r\n    stopTimer()\r\n    setNumber('')\r\n  } else if (e.key === \"Enter\" && e.target.value >= 30) {\r\n    stopTimer()\r\n    dispatch(autoUpdate({id: 'autoupdate', str: number}))\r\n  }else if (e.key === \"Enter\" && e.target.value < 30) {\r\n    stopTimer()\r\n    setNumber(30)\r\n    dispatch(autoUpdate({id: 'autoupdate', str: 30}))\r\n  };\r\n}\r\n\r\nconst onchangeAll=(e)=>{\r\n  let s = e.target.checked;\r\n  dispatch(autoUpdate({id: 'isGrabAll', str: s}))\r\n  if (s) {\r\n    const newSelected = bodyTableRows.map((n,ind) => n[0].value);\r\n    sessionStorage.setItem(\"selected\", newSelected);\r\n    dispatch(getselected(newSelected))\r\n    return;\r\n  } else return\r\n   \r\n  \r\n}\r\n\r\n\r\nconst onHandleCheckProduct=(e)=>{\r\n  let check = e.target.checked\r\n  dispatch(autoUpdate({id: 'isAllListProducts', str: check}))\r\n\r\n}\r\n  return (\r\n    <Box sx={clasListContainer}  component=\"section\">\r\n<Box sx={buttonBoxStyle}>\r\n      <StyledButton\r\n        text={'Створити'}\r\n        func= {handleClick}\r\n        startIcon = { <AddIcon sx={{fill: colorsRef.fillSvgColor, width: '17px', marginTop: '-2px'}} />}\r\n        bgColor={colorsRef.btnAddBgColor}\r\n        border= {colorsRef.btnAddBorderColor}\r\n           />\r\n      \r\n\r\n      {paramsCount>0 && <Box sx={{marginLeft: '20px', marginRight: 'auto'}}>      \r\n      <StyledButton            \r\n        text={`Скинути фільтри: ${paramsCount}`}\r\n        func= {handleResetFilters}\r\n        bgColor={colorsRef.btnAddBgColor}\r\n        border= {'#7bb31a'}        \r\n           />\r\n           </Box>}\r\n  </Box>\r\n  <Box sx={{'@media (max-width:768px)': {width: '100%', textAlign: 'center' },}}>\r\n    <List  sx={listStyle}>\r\n\r\n    <ListItem sx={{paddingLeft: '0px', paddingRight: '10px'}}>\r\n        <BpCheckbox name='product_list' onChange={onHandleCheckProduct} tooltip ={'Повний список товарів'} \r\n        placement=\"left\"  checked={isAllListProducts}/>    \r\n        </ListItem>\r\n\r\n      <ListItem sx={{paddingLeft: '10px', paddingRight: '10px', \"& :hover\": {cursor: 'pointer', }}}>\r\n        <CustomizedCheckboxAll name='product_list' onChange={onchangeAll} tooltip ={'Вибрати все'} checked={isGrabAll} />\r\n      </ListItem>\r\n       \r\n        <ListItem sx={{paddingLeft: '10px', paddingRight: '20px', \"& :hover\": {cursor: 'pointer', }}}>\r\n        <BootstrapTooltip title=\"Налаштувати колонки\">\r\n          <BuildOutlinedIcon onClick = {handleColumnSettings} sx={svgStyle}/>          \r\n          </BootstrapTooltip>\r\n          {columns.length > 0 && <ColumnSettings/>}\r\n        </ListItem>\r\n       \r\n        <ListItem sx={{padding: '0px 0px 0px 10px', \"& :hover\": {cursor: 'pointer',}}}>      \r\n        <DownloadComponent/>  \r\n        <ModalMenu/>\r\n        </ListItem>\r\n        \r\n        <ListItem sx={{padding: '0px 0px 0px 0px', \"& :hover\": {cursor: 'pointer', }}}> \r\n        <OtherMenuComponent/>        \r\n        \r\n        </ListItem>\r\n\r\n        <ListItem sx={{paddingLeft: '5px', paddingRight: '10px', \"& :hover\": {cursor: 'pointer', }}}>\r\n           <BootstrapTooltip title=\"Оновити сторінку\">\r\n        <ReplayOutlinedIcon onClick={handleReload} sx={svgStyle} />\r\n           </BootstrapTooltip>\r\n        </ListItem>        \r\n\r\n        <ListItem>\r\n        <BootstrapTooltip title=\"Частота автооновлення\">\r\n        <input value ={autoUdatesTime?autoUdatesTime:number}  onKeyDown={handleKeyDown} style={{width: '50px', padding: '4px 5px', border: '1px solid #d0d0d0', borderRadius: '4px'}} type='text'  onChange={numberChange}\r\n         ></input>\r\n        </BootstrapTooltip>\r\n        </ListItem>\r\n\r\n        <ListItem sx={{paddingLeft: '10px', paddingRight: '10px'}}>\r\n        <BpCheckbox onChange={onHandleCheck} name='auto_reloading' tooltip ={'Увімкнути автооновлення'} checked={isAutoUdate}/>\r\n        </ListItem>\r\n\r\n\r\n    </List>\r\n    </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HeaderContainer","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m22.61 18.99-9.08-9.08c.93-2.34.45-5.1-1.44-7C9.79.61 6.21.4 3.66 2.26L7.5 6.11 6.08 7.52 2.25 3.69C.39 6.23.6 9.82 2.9 12.11c1.86 1.86 4.57 2.35 6.89 1.48l9.11 9.11c.39.39 1.02.39 1.41 0l2.3-2.3c.4-.38.4-1.01 0-1.41zm-3 1.6-9.46-9.46c-.61.45-1.29.72-2 .82-1.36.2-2.79-.21-3.83-1.25C3.37 9.76 2.93 8.5 3 7.26l3.09 3.09 4.24-4.24-3.09-3.09c1.24-.07 2.49.37 3.44 1.31 1.08 1.08 1.49 2.57 1.24 3.96-.12.71-.42 1.37-.88 1.96l9.45 9.45-.88.89z\"\n}), 'BuildOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRightOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8z\"\n}), 'ReplayOutlined');\n\nexports.default = _default;"],"names":["InputFile","useState","labelText","setLabelText","sx","display","width","alignItems","border","padding","maxWidth","borderRadius","cursor","marginLeft","minWidth","fontSize","color","htmlFor","onChange","e","target","value","height","opasity","type","id","name","accept","StyledextField","styled","TextField","top","position","colorsRef","miWidth","marginRight","zIndex","StyledInput","InputBase","theme","backgroundColor","selectStylesCheck","maxHeight","lineHeight","backgrounColor","selectStyles","MenuProps","PaperProps","style","ITEM_HEIGHT","DownloadComponent","dispatch","useDispatch","open","setOpen","filteredRows","useSelector","state","ordersAll","tHeadColumnFiltered","selected","sessionStorage","getItem","split","handleReturnProduct","length","setOrderReturn","map","getUpdate","handlePaymentReceived","setOrderPayment","getFilteredOrders","getAllOrders","Select","input","onClick","startAdornment","InputAdornment","LocalMallOutlined","svgStyle","MenuItem","listStyle","ListItemText","getOpenTableCreate","str","primary","Transition","forwardRef","props","ref","Slide","direction","overflowX","ModalMenu","openDownExel","modalControl","opendownload","group","setGroup","handleClouse","Dialog","TransitionComponent","keepMounted","onClose","overflow","bottom","Box","justifyContent","DialogTitle","IconButton","component","HighlightOff","DialogContent","Typography","OutlinedInput","ind","DialogActions","S","text","func","ColumnSettings","isOpenColumnSettings","columnSettings","tHeadColumn","filteredColumn","columnsCopy","setColumnsCopy","copyTranslster","Object","entries","translater","i","num","search","setSearch","useEffect","columnCopy","col","checked","secondColumn","firstColumn","filt","find","n","data","push","concat","handleClose","handleToggle","check","column","splice","listItemStyle","Close","borderTop","borderBottom","List","ListItem","Checkbox","edge","tabIndex","disableRipple","Autocomplete","options","currentColumn","newColumn","newSelectData","findIndex","innerText","currentSelectColumn","currentDataColumn","newDataColumn","handleSelectChange","getOptionDisabled","option","disableClearable","getOptionLabel","renderInput","params","disabled","textFieldStyles","flexWrap","filter","searchable","orderable","setItem","tHeadFilteredColumnUpdate","bgColor","boxShadow","OtherMenuComponent","navigate","useNavigate","openJustin","setOpenjustin","justinRef","useRef","openNp","setOpenNp","newPostRef","openPrint","setOpenPrint","printRef","handleJustinClosed","handleClickJustinItem","handleClickJustinItemCreate","Settings","onMouseEnter","KeyboardArrowRightOutlined","Popper","anchorEl","current","role","undefined","placement","onMouseLeave","Paper","MenuList","withReactContent","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","then","result","isConfirmed","console","log","searchParams","copyParams","values","bodyTableRows","paramsCount","searchParamCount","columns","number","setNumber","autoUdatesTime","autoupdate","isAutoUdate","isAutoUpdate","isGrabAll","isAllListProducts","timer","setTimer","searchCount","reduce","acc","searchCountUpdate","Number","time","setInterval","handleReload","stopTimer","clearInterval","getAllStatuses","clasListContainer","buttonBoxStyle","getClouseTableCreate","startIcon","Add","fill","marginTop","CountUpdate","textAlign","paddingLeft","paddingRight","autoUpdate","tooltip","s","newSelected","getselected","BuildOutlined","ReplayOutlined","onKeyDown","key","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}